[
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "messages",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "messages",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "messages",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "messages",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "messages",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "messages",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "messages",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "messages",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "messages",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "AppConfig",
        "importPath": "django.apps",
        "description": "django.apps",
        "isExtraImport": true,
        "detail": "django.apps",
        "documentation": {}
    },
    {
        "label": "AppConfig",
        "importPath": "django.apps",
        "description": "django.apps",
        "isExtraImport": true,
        "detail": "django.apps",
        "documentation": {}
    },
    {
        "label": "AppConfig",
        "importPath": "django.apps",
        "description": "django.apps",
        "isExtraImport": true,
        "detail": "django.apps",
        "documentation": {}
    },
    {
        "label": "AppConfig",
        "importPath": "django.apps",
        "description": "django.apps",
        "isExtraImport": true,
        "detail": "django.apps",
        "documentation": {}
    },
    {
        "label": "AppConfig",
        "importPath": "django.apps",
        "description": "django.apps",
        "isExtraImport": true,
        "detail": "django.apps",
        "documentation": {}
    },
    {
        "label": "AppConfig",
        "importPath": "django.apps",
        "description": "django.apps",
        "isExtraImport": true,
        "detail": "django.apps",
        "documentation": {}
    },
    {
        "label": "AppConfig",
        "importPath": "django.apps",
        "description": "django.apps",
        "isExtraImport": true,
        "detail": "django.apps",
        "documentation": {}
    },
    {
        "label": "AppConfig",
        "importPath": "django.apps",
        "description": "django.apps",
        "isExtraImport": true,
        "detail": "django.apps",
        "documentation": {}
    },
    {
        "label": "AppConfig",
        "importPath": "django.apps",
        "description": "django.apps",
        "isExtraImport": true,
        "detail": "django.apps",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "TestCase",
        "importPath": "django.test",
        "description": "django.test",
        "isExtraImport": true,
        "detail": "django.test",
        "documentation": {}
    },
    {
        "label": "TestCase",
        "importPath": "django.test",
        "description": "django.test",
        "isExtraImport": true,
        "detail": "django.test",
        "documentation": {}
    },
    {
        "label": "TestCase",
        "importPath": "django.test",
        "description": "django.test",
        "isExtraImport": true,
        "detail": "django.test",
        "documentation": {}
    },
    {
        "label": "TestCase",
        "importPath": "django.test",
        "description": "django.test",
        "isExtraImport": true,
        "detail": "django.test",
        "documentation": {}
    },
    {
        "label": "TestCase",
        "importPath": "django.test",
        "description": "django.test",
        "isExtraImport": true,
        "detail": "django.test",
        "documentation": {}
    },
    {
        "label": "TestCase",
        "importPath": "django.test",
        "description": "django.test",
        "isExtraImport": true,
        "detail": "django.test",
        "documentation": {}
    },
    {
        "label": "TestCase",
        "importPath": "django.test",
        "description": "django.test",
        "isExtraImport": true,
        "detail": "django.test",
        "documentation": {}
    },
    {
        "label": "TestCase",
        "importPath": "django.test",
        "description": "django.test",
        "isExtraImport": true,
        "detail": "django.test",
        "documentation": {}
    },
    {
        "label": "TestCase",
        "importPath": "django.test",
        "description": "django.test",
        "isExtraImport": true,
        "detail": "django.test",
        "documentation": {}
    },
    {
        "label": "path",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "include",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "reverse",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "path",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "include",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "path",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "include",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "path",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "path",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "include",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "path",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "include",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "reverse",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "path",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "include",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "reverse",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "path",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "include",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "reverse",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "path",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "include",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "reverse_lazy",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "reverse",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "path",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "include",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "path",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "include",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "reverse_lazy",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "settings",
        "importPath": "django.conf",
        "description": "django.conf",
        "isExtraImport": true,
        "detail": "django.conf",
        "documentation": {}
    },
    {
        "label": "settings",
        "importPath": "django.conf",
        "description": "django.conf",
        "isExtraImport": true,
        "detail": "django.conf",
        "documentation": {}
    },
    {
        "label": "settings",
        "importPath": "django.conf",
        "description": "django.conf",
        "isExtraImport": true,
        "detail": "django.conf",
        "documentation": {}
    },
    {
        "label": "settings",
        "importPath": "django.conf",
        "description": "django.conf",
        "isExtraImport": true,
        "detail": "django.conf",
        "documentation": {}
    },
    {
        "label": "settings",
        "importPath": "django.conf",
        "description": "django.conf",
        "isExtraImport": true,
        "detail": "django.conf",
        "documentation": {}
    },
    {
        "label": "settings",
        "importPath": "django.conf",
        "description": "django.conf",
        "isExtraImport": true,
        "detail": "django.conf",
        "documentation": {}
    },
    {
        "label": "settings",
        "importPath": "django.conf",
        "description": "django.conf",
        "isExtraImport": true,
        "detail": "django.conf",
        "documentation": {}
    },
    {
        "label": "settings",
        "importPath": "django.conf",
        "description": "django.conf",
        "isExtraImport": true,
        "detail": "django.conf",
        "documentation": {}
    },
    {
        "label": "settings",
        "importPath": "django.conf",
        "description": "django.conf",
        "isExtraImport": true,
        "detail": "django.conf",
        "documentation": {}
    },
    {
        "label": "settings",
        "importPath": "django.conf",
        "description": "django.conf",
        "isExtraImport": true,
        "detail": "django.conf",
        "documentation": {}
    },
    {
        "label": "settings",
        "importPath": "django.conf",
        "description": "django.conf",
        "isExtraImport": true,
        "detail": "django.conf",
        "documentation": {}
    },
    {
        "label": "settings",
        "importPath": "django.conf",
        "description": "django.conf",
        "isExtraImport": true,
        "detail": "django.conf",
        "documentation": {}
    },
    {
        "label": "settings",
        "importPath": "django.conf",
        "description": "django.conf",
        "isExtraImport": true,
        "detail": "django.conf",
        "documentation": {}
    },
    {
        "label": "settings",
        "importPath": "django.conf",
        "description": "django.conf",
        "isExtraImport": true,
        "detail": "django.conf",
        "documentation": {}
    },
    {
        "label": "settings",
        "importPath": "django.conf",
        "description": "django.conf",
        "isExtraImport": true,
        "detail": "django.conf",
        "documentation": {}
    },
    {
        "label": "settings",
        "importPath": "django.conf",
        "description": "django.conf",
        "isExtraImport": true,
        "detail": "django.conf",
        "documentation": {}
    },
    {
        "label": "settings",
        "importPath": "django.conf",
        "description": "django.conf",
        "isExtraImport": true,
        "detail": "django.conf",
        "documentation": {}
    },
    {
        "label": "static",
        "importPath": "django.conf.urls.static",
        "description": "django.conf.urls.static",
        "isExtraImport": true,
        "detail": "django.conf.urls.static",
        "documentation": {}
    },
    {
        "label": "static",
        "importPath": "django.conf.urls.static",
        "description": "django.conf.urls.static",
        "isExtraImport": true,
        "detail": "django.conf.urls.static",
        "documentation": {}
    },
    {
        "label": "static",
        "importPath": "django.conf.urls.static",
        "description": "django.conf.urls.static",
        "isExtraImport": true,
        "detail": "django.conf.urls.static",
        "documentation": {}
    },
    {
        "label": "static",
        "importPath": "django.conf.urls.static",
        "description": "django.conf.urls.static",
        "isExtraImport": true,
        "detail": "django.conf.urls.static",
        "documentation": {}
    },
    {
        "label": "static",
        "importPath": "django.conf.urls.static",
        "description": "django.conf.urls.static",
        "isExtraImport": true,
        "detail": "django.conf.urls.static",
        "documentation": {}
    },
    {
        "label": "static",
        "importPath": "django.conf.urls.static",
        "description": "django.conf.urls.static",
        "isExtraImport": true,
        "detail": "django.conf.urls.static",
        "documentation": {}
    },
    {
        "label": "static",
        "importPath": "django.conf.urls.static",
        "description": "django.conf.urls.static",
        "isExtraImport": true,
        "detail": "django.conf.urls.static",
        "documentation": {}
    },
    {
        "label": "static",
        "importPath": "django.conf.urls.static",
        "description": "django.conf.urls.static",
        "isExtraImport": true,
        "detail": "django.conf.urls.static",
        "documentation": {}
    },
    {
        "label": "static",
        "importPath": "django.conf.urls.static",
        "description": "django.conf.urls.static",
        "isExtraImport": true,
        "detail": "django.conf.urls.static",
        "documentation": {}
    },
    {
        "label": "static",
        "importPath": "django.conf.urls.static",
        "description": "django.conf.urls.static",
        "isExtraImport": true,
        "detail": "django.conf.urls.static",
        "documentation": {}
    },
    {
        "label": "TemplateView",
        "importPath": "django.views.generic",
        "description": "django.views.generic",
        "isExtraImport": true,
        "detail": "django.views.generic",
        "documentation": {}
    },
    {
        "label": "TemplateView",
        "importPath": "django.views.generic",
        "description": "django.views.generic",
        "isExtraImport": true,
        "detail": "django.views.generic",
        "documentation": {}
    },
    {
        "label": "TemplateView",
        "importPath": "django.views.generic",
        "description": "django.views.generic",
        "isExtraImport": true,
        "detail": "django.views.generic",
        "documentation": {}
    },
    {
        "label": "ListView",
        "importPath": "django.views.generic",
        "description": "django.views.generic",
        "isExtraImport": true,
        "detail": "django.views.generic",
        "documentation": {}
    },
    {
        "label": "DetailView",
        "importPath": "django.views.generic",
        "description": "django.views.generic",
        "isExtraImport": true,
        "detail": "django.views.generic",
        "documentation": {}
    },
    {
        "label": "TemplateView",
        "importPath": "django.views.generic",
        "description": "django.views.generic",
        "isExtraImport": true,
        "detail": "django.views.generic",
        "documentation": {}
    },
    {
        "label": "TemplateView",
        "importPath": "django.views.generic",
        "description": "django.views.generic",
        "isExtraImport": true,
        "detail": "django.views.generic",
        "documentation": {}
    },
    {
        "label": "TemplateView",
        "importPath": "django.views.generic",
        "description": "django.views.generic",
        "isExtraImport": true,
        "detail": "django.views.generic",
        "documentation": {}
    },
    {
        "label": "TemplateView",
        "importPath": "django.views.generic",
        "description": "django.views.generic",
        "isExtraImport": true,
        "detail": "django.views.generic",
        "documentation": {}
    },
    {
        "label": "ListView",
        "importPath": "django.views.generic",
        "description": "django.views.generic",
        "isExtraImport": true,
        "detail": "django.views.generic",
        "documentation": {}
    },
    {
        "label": "DetailView",
        "importPath": "django.views.generic",
        "description": "django.views.generic",
        "isExtraImport": true,
        "detail": "django.views.generic",
        "documentation": {}
    },
    {
        "label": "CreateView",
        "importPath": "django.views.generic",
        "description": "django.views.generic",
        "isExtraImport": true,
        "detail": "django.views.generic",
        "documentation": {}
    },
    {
        "label": "UpdateView",
        "importPath": "django.views.generic",
        "description": "django.views.generic",
        "isExtraImport": true,
        "detail": "django.views.generic",
        "documentation": {}
    },
    {
        "label": "DeleteView",
        "importPath": "django.views.generic",
        "description": "django.views.generic",
        "isExtraImport": true,
        "detail": "django.views.generic",
        "documentation": {}
    },
    {
        "label": "TemplateView",
        "importPath": "django.views.generic",
        "description": "django.views.generic",
        "isExtraImport": true,
        "detail": "django.views.generic",
        "documentation": {}
    },
    {
        "label": "TemplateView",
        "importPath": "django.views.generic",
        "description": "django.views.generic",
        "isExtraImport": true,
        "detail": "django.views.generic",
        "documentation": {}
    },
    {
        "label": "CreateView",
        "importPath": "django.views.generic",
        "description": "django.views.generic",
        "isExtraImport": true,
        "detail": "django.views.generic",
        "documentation": {}
    },
    {
        "label": "UpdateView",
        "importPath": "django.views.generic",
        "description": "django.views.generic",
        "isExtraImport": true,
        "detail": "django.views.generic",
        "documentation": {}
    },
    {
        "label": "DetailView",
        "importPath": "django.views.generic",
        "description": "django.views.generic",
        "isExtraImport": true,
        "detail": "django.views.generic",
        "documentation": {}
    },
    {
        "label": "render",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "redirect",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "get_object_or_404",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "render",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "redirect",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "get_object_or_404",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "render",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "render",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "render",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "redirect",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "get_object_or_404",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "render",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "redirect",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "get_object_or_404",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "render",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "redirect",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "get_object_or_404",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "render",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "get_object_or_404",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "redirect",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "render",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "redirect",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "get_object_or_404",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "render",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "redirect",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "staff_member_required",
        "importPath": "django.contrib.admin.views.decorators",
        "description": "django.contrib.admin.views.decorators",
        "isExtraImport": true,
        "detail": "django.contrib.admin.views.decorators",
        "documentation": {}
    },
    {
        "label": "Count",
        "importPath": "django.db.models",
        "description": "django.db.models",
        "isExtraImport": true,
        "detail": "django.db.models",
        "documentation": {}
    },
    {
        "label": "Q",
        "importPath": "django.db.models",
        "description": "django.db.models",
        "isExtraImport": true,
        "detail": "django.db.models",
        "documentation": {}
    },
    {
        "label": "Count",
        "importPath": "django.db.models",
        "description": "django.db.models",
        "isExtraImport": true,
        "detail": "django.db.models",
        "documentation": {}
    },
    {
        "label": "Max",
        "importPath": "django.db.models",
        "description": "django.db.models",
        "isExtraImport": true,
        "detail": "django.db.models",
        "documentation": {}
    },
    {
        "label": "Sum",
        "importPath": "django.db.models",
        "description": "django.db.models",
        "isExtraImport": true,
        "detail": "django.db.models",
        "documentation": {}
    },
    {
        "label": "Max",
        "importPath": "django.db.models",
        "description": "django.db.models",
        "isExtraImport": true,
        "detail": "django.db.models",
        "documentation": {}
    },
    {
        "label": "Count",
        "importPath": "django.db.models",
        "description": "django.db.models",
        "isExtraImport": true,
        "detail": "django.db.models",
        "documentation": {}
    },
    {
        "label": "Count",
        "importPath": "django.db.models",
        "description": "django.db.models",
        "isExtraImport": true,
        "detail": "django.db.models",
        "documentation": {}
    },
    {
        "label": "Q",
        "importPath": "django.db.models",
        "description": "django.db.models",
        "isExtraImport": true,
        "detail": "django.db.models",
        "documentation": {}
    },
    {
        "label": "Count",
        "importPath": "django.db.models",
        "description": "django.db.models",
        "isExtraImport": true,
        "detail": "django.db.models",
        "documentation": {}
    },
    {
        "label": "Sum",
        "importPath": "django.db.models",
        "description": "django.db.models",
        "isExtraImport": true,
        "detail": "django.db.models",
        "documentation": {}
    },
    {
        "label": "Q",
        "importPath": "django.db.models",
        "description": "django.db.models",
        "isExtraImport": true,
        "detail": "django.db.models",
        "documentation": {}
    },
    {
        "label": "Q",
        "importPath": "django.db.models",
        "description": "django.db.models",
        "isExtraImport": true,
        "detail": "django.db.models",
        "documentation": {}
    },
    {
        "label": "Q",
        "importPath": "django.db.models",
        "description": "django.db.models",
        "isExtraImport": true,
        "detail": "django.db.models",
        "documentation": {}
    },
    {
        "label": "Count",
        "importPath": "django.db.models",
        "description": "django.db.models",
        "isExtraImport": true,
        "detail": "django.db.models",
        "documentation": {}
    },
    {
        "label": "Sum",
        "importPath": "django.db.models",
        "description": "django.db.models",
        "isExtraImport": true,
        "detail": "django.db.models",
        "documentation": {}
    },
    {
        "label": "Q",
        "importPath": "django.db.models",
        "description": "django.db.models",
        "isExtraImport": true,
        "detail": "django.db.models",
        "documentation": {}
    },
    {
        "label": "Q",
        "importPath": "django.db.models",
        "description": "django.db.models",
        "isExtraImport": true,
        "detail": "django.db.models",
        "documentation": {}
    },
    {
        "label": "Avg",
        "importPath": "django.db.models",
        "description": "django.db.models",
        "isExtraImport": true,
        "detail": "django.db.models",
        "documentation": {}
    },
    {
        "label": "Count",
        "importPath": "django.db.models",
        "description": "django.db.models",
        "isExtraImport": true,
        "detail": "django.db.models",
        "documentation": {}
    },
    {
        "label": "Avg",
        "importPath": "django.db.models",
        "description": "django.db.models",
        "isExtraImport": true,
        "detail": "django.db.models",
        "documentation": {}
    },
    {
        "label": "Count",
        "importPath": "django.db.models",
        "description": "django.db.models",
        "isExtraImport": true,
        "detail": "django.db.models",
        "documentation": {}
    },
    {
        "label": "Q",
        "importPath": "django.db.models",
        "description": "django.db.models",
        "isExtraImport": true,
        "detail": "django.db.models",
        "documentation": {}
    },
    {
        "label": "JsonResponse",
        "importPath": "django.http",
        "description": "django.http",
        "isExtraImport": true,
        "detail": "django.http",
        "documentation": {}
    },
    {
        "label": "JsonResponse",
        "importPath": "django.http",
        "description": "django.http",
        "isExtraImport": true,
        "detail": "django.http",
        "documentation": {}
    },
    {
        "label": "JsonResponse",
        "importPath": "django.http",
        "description": "django.http",
        "isExtraImport": true,
        "detail": "django.http",
        "documentation": {}
    },
    {
        "label": "JsonResponse",
        "importPath": "django.http",
        "description": "django.http",
        "isExtraImport": true,
        "detail": "django.http",
        "documentation": {}
    },
    {
        "label": "JsonResponse",
        "importPath": "django.http",
        "description": "django.http",
        "isExtraImport": true,
        "detail": "django.http",
        "documentation": {}
    },
    {
        "label": "JsonResponse",
        "importPath": "django.http",
        "description": "django.http",
        "isExtraImport": true,
        "detail": "django.http",
        "documentation": {}
    },
    {
        "label": "JsonResponse",
        "importPath": "django.http",
        "description": "django.http",
        "isExtraImport": true,
        "detail": "django.http",
        "documentation": {}
    },
    {
        "label": "timezone",
        "importPath": "django.utils",
        "description": "django.utils",
        "isExtraImport": true,
        "detail": "django.utils",
        "documentation": {}
    },
    {
        "label": "timezone",
        "importPath": "django.utils",
        "description": "django.utils",
        "isExtraImport": true,
        "detail": "django.utils",
        "documentation": {}
    },
    {
        "label": "timezone",
        "importPath": "django.utils",
        "description": "django.utils",
        "isExtraImport": true,
        "detail": "django.utils",
        "documentation": {}
    },
    {
        "label": "timezone",
        "importPath": "django.utils",
        "description": "django.utils",
        "isExtraImport": true,
        "detail": "django.utils",
        "documentation": {}
    },
    {
        "label": "timezone",
        "importPath": "django.utils",
        "description": "django.utils",
        "isExtraImport": true,
        "detail": "django.utils",
        "documentation": {}
    },
    {
        "label": "timezone",
        "importPath": "django.utils",
        "description": "django.utils",
        "isExtraImport": true,
        "detail": "django.utils",
        "documentation": {}
    },
    {
        "label": "timezone",
        "importPath": "django.utils",
        "description": "django.utils",
        "isExtraImport": true,
        "detail": "django.utils",
        "documentation": {}
    },
    {
        "label": "timedelta",
        "importPath": "datetime",
        "description": "datetime",
        "isExtraImport": true,
        "detail": "datetime",
        "documentation": {}
    },
    {
        "label": "timedelta",
        "importPath": "datetime",
        "description": "datetime",
        "isExtraImport": true,
        "detail": "datetime",
        "documentation": {}
    },
    {
        "label": "timedelta",
        "importPath": "datetime",
        "description": "datetime",
        "isExtraImport": true,
        "detail": "datetime",
        "documentation": {}
    },
    {
        "label": "timedelta",
        "importPath": "datetime",
        "description": "datetime",
        "isExtraImport": true,
        "detail": "datetime",
        "documentation": {}
    },
    {
        "label": "Product",
        "importPath": "products.models",
        "description": "products.models",
        "isExtraImport": true,
        "detail": "products.models",
        "documentation": {}
    },
    {
        "label": "Car",
        "importPath": "products.models",
        "description": "products.models",
        "isExtraImport": true,
        "detail": "products.models",
        "documentation": {}
    },
    {
        "label": "RealEstate",
        "importPath": "products.models",
        "description": "products.models",
        "isExtraImport": true,
        "detail": "products.models",
        "documentation": {}
    },
    {
        "label": "HotelBooking",
        "importPath": "products.models",
        "description": "products.models",
        "isExtraImport": true,
        "detail": "products.models",
        "documentation": {}
    },
    {
        "label": "Product",
        "importPath": "products.models",
        "description": "products.models",
        "isExtraImport": true,
        "detail": "products.models",
        "documentation": {}
    },
    {
        "label": "Product",
        "importPath": "products.models",
        "description": "products.models",
        "isExtraImport": true,
        "detail": "products.models",
        "documentation": {}
    },
    {
        "label": "Product",
        "importPath": "products.models",
        "description": "products.models",
        "isExtraImport": true,
        "detail": "products.models",
        "documentation": {}
    },
    {
        "label": "Product",
        "importPath": "products.models",
        "description": "products.models",
        "isExtraImport": true,
        "detail": "products.models",
        "documentation": {}
    },
    {
        "label": "Product",
        "importPath": "products.models",
        "description": "products.models",
        "isExtraImport": true,
        "detail": "products.models",
        "documentation": {}
    },
    {
        "label": "Car",
        "importPath": "products.models",
        "description": "products.models",
        "isExtraImport": true,
        "detail": "products.models",
        "documentation": {}
    },
    {
        "label": "RealEstate",
        "importPath": "products.models",
        "description": "products.models",
        "isExtraImport": true,
        "detail": "products.models",
        "documentation": {}
    },
    {
        "label": "Product",
        "importPath": "products.models",
        "description": "products.models",
        "isExtraImport": true,
        "detail": "products.models",
        "documentation": {}
    },
    {
        "label": "Product",
        "importPath": "products.models",
        "description": "products.models",
        "isExtraImport": true,
        "detail": "products.models",
        "documentation": {}
    },
    {
        "label": "Product",
        "importPath": "products.models",
        "description": "products.models",
        "isExtraImport": true,
        "detail": "products.models",
        "documentation": {}
    },
    {
        "label": "Product",
        "importPath": "products.models",
        "description": "products.models",
        "isExtraImport": true,
        "detail": "products.models",
        "documentation": {}
    },
    {
        "label": "Product",
        "importPath": "products.models",
        "description": "products.models",
        "isExtraImport": true,
        "detail": "products.models",
        "documentation": {}
    },
    {
        "label": "Product",
        "importPath": "products.models",
        "description": "products.models",
        "isExtraImport": true,
        "detail": "products.models",
        "documentation": {}
    },
    {
        "label": "Product",
        "importPath": "products.models",
        "description": "products.models",
        "isExtraImport": true,
        "detail": "products.models",
        "documentation": {}
    },
    {
        "label": "Product",
        "importPath": "products.models",
        "description": "products.models",
        "isExtraImport": true,
        "detail": "products.models",
        "documentation": {}
    },
    {
        "label": "Product",
        "importPath": "products.models",
        "description": "products.models",
        "isExtraImport": true,
        "detail": "products.models",
        "documentation": {}
    },
    {
        "label": "ProductImage",
        "importPath": "products.models",
        "description": "products.models",
        "isExtraImport": true,
        "detail": "products.models",
        "documentation": {}
    },
    {
        "label": "Car",
        "importPath": "products.models",
        "description": "products.models",
        "isExtraImport": true,
        "detail": "products.models",
        "documentation": {}
    },
    {
        "label": "RealEstate",
        "importPath": "products.models",
        "description": "products.models",
        "isExtraImport": true,
        "detail": "products.models",
        "documentation": {}
    },
    {
        "label": "HotelBooking",
        "importPath": "products.models",
        "description": "products.models",
        "isExtraImport": true,
        "detail": "products.models",
        "documentation": {}
    },
    {
        "label": "Product",
        "importPath": "products.models",
        "description": "products.models",
        "isExtraImport": true,
        "detail": "products.models",
        "documentation": {}
    },
    {
        "label": "Car",
        "importPath": "products.models",
        "description": "products.models",
        "isExtraImport": true,
        "detail": "products.models",
        "documentation": {}
    },
    {
        "label": "RealEstate",
        "importPath": "products.models",
        "description": "products.models",
        "isExtraImport": true,
        "detail": "products.models",
        "documentation": {}
    },
    {
        "label": "HotelBooking",
        "importPath": "products.models",
        "description": "products.models",
        "isExtraImport": true,
        "detail": "products.models",
        "documentation": {}
    },
    {
        "label": "ProductImage",
        "importPath": "products.models",
        "description": "products.models",
        "isExtraImport": true,
        "detail": "products.models",
        "documentation": {}
    },
    {
        "label": "Product",
        "importPath": "products.models",
        "description": "products.models",
        "isExtraImport": true,
        "detail": "products.models",
        "documentation": {}
    },
    {
        "label": "Product",
        "importPath": "products.models",
        "description": "products.models",
        "isExtraImport": true,
        "detail": "products.models",
        "documentation": {}
    },
    {
        "label": "User",
        "importPath": "users.models",
        "description": "users.models",
        "isExtraImport": true,
        "detail": "users.models",
        "documentation": {}
    },
    {
        "label": "Auction",
        "importPath": "auctions.models",
        "description": "auctions.models",
        "isExtraImport": true,
        "detail": "auctions.models",
        "documentation": {}
    },
    {
        "label": "Auction",
        "importPath": "auctions.models",
        "description": "auctions.models",
        "isExtraImport": true,
        "detail": "auctions.models",
        "documentation": {}
    },
    {
        "label": "Bid",
        "importPath": "auctions.models",
        "description": "auctions.models",
        "isExtraImport": true,
        "detail": "auctions.models",
        "documentation": {}
    },
    {
        "label": "Review",
        "importPath": "reviews.models",
        "description": "reviews.models",
        "isExtraImport": true,
        "detail": "reviews.models",
        "documentation": {}
    },
    {
        "label": "Review",
        "importPath": "reviews.models",
        "description": "reviews.models",
        "isExtraImport": true,
        "detail": "reviews.models",
        "documentation": {}
    },
    {
        "label": "Review",
        "importPath": "reviews.models",
        "description": "reviews.models",
        "isExtraImport": true,
        "detail": "reviews.models",
        "documentation": {}
    },
    {
        "label": "Order",
        "importPath": "orders.models",
        "description": "orders.models",
        "isExtraImport": true,
        "detail": "orders.models",
        "documentation": {}
    },
    {
        "label": "Order",
        "importPath": "orders.models",
        "description": "orders.models",
        "isExtraImport": true,
        "detail": "orders.models",
        "documentation": {}
    },
    {
        "label": "Order",
        "importPath": "orders.models",
        "description": "orders.models",
        "isExtraImport": true,
        "detail": "orders.models",
        "documentation": {}
    },
    {
        "label": "Message",
        "importPath": "messaging.models",
        "description": "messaging.models",
        "isExtraImport": true,
        "detail": "messaging.models",
        "documentation": {}
    },
    {
        "label": "Message",
        "importPath": "messaging.models",
        "description": "messaging.models",
        "isExtraImport": true,
        "detail": "messaging.models",
        "documentation": {}
    },
    {
        "label": "Conversation",
        "importPath": "messaging.models",
        "description": "messaging.models",
        "isExtraImport": true,
        "detail": "messaging.models",
        "documentation": {}
    },
    {
        "label": "Message",
        "importPath": "messaging.models",
        "description": "messaging.models",
        "isExtraImport": true,
        "detail": "messaging.models",
        "documentation": {}
    },
    {
        "label": "Conversation",
        "importPath": "messaging.models",
        "description": "messaging.models",
        "isExtraImport": true,
        "detail": "messaging.models",
        "documentation": {}
    },
    {
        "label": "Message",
        "importPath": "messaging.models",
        "description": "messaging.models",
        "isExtraImport": true,
        "detail": "messaging.models",
        "documentation": {}
    },
    {
        "label": "Conversation",
        "importPath": "messaging.models",
        "description": "messaging.models",
        "isExtraImport": true,
        "detail": "messaging.models",
        "documentation": {}
    },
    {
        "label": "django.db.models.deletion",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "django.db.models.deletion",
        "description": "django.db.models.deletion",
        "detail": "django.db.models.deletion",
        "documentation": {}
    },
    {
        "label": "format_html",
        "importPath": "django.utils.html",
        "description": "django.utils.html",
        "isExtraImport": true,
        "detail": "django.utils.html",
        "documentation": {}
    },
    {
        "label": "format_html",
        "importPath": "django.utils.html",
        "description": "django.utils.html",
        "isExtraImport": true,
        "detail": "django.utils.html",
        "documentation": {}
    },
    {
        "label": "format_html",
        "importPath": "django.utils.html",
        "description": "django.utils.html",
        "isExtraImport": true,
        "detail": "django.utils.html",
        "documentation": {}
    },
    {
        "label": "format_html",
        "importPath": "django.utils.html",
        "description": "django.utils.html",
        "isExtraImport": true,
        "detail": "django.utils.html",
        "documentation": {}
    },
    {
        "label": "format_html",
        "importPath": "django.utils.html",
        "description": "django.utils.html",
        "isExtraImport": true,
        "detail": "django.utils.html",
        "documentation": {}
    },
    {
        "label": "format_html",
        "importPath": "django.utils.html",
        "description": "django.utils.html",
        "isExtraImport": true,
        "detail": "django.utils.html",
        "documentation": {}
    },
    {
        "label": "format_html",
        "importPath": "django.utils.html",
        "description": "django.utils.html",
        "isExtraImport": true,
        "detail": "django.utils.html",
        "documentation": {}
    },
    {
        "label": "format_html",
        "importPath": "django.utils.html",
        "description": "django.utils.html",
        "isExtraImport": true,
        "detail": "django.utils.html",
        "documentation": {}
    },
    {
        "label": "mark_safe",
        "importPath": "django.utils.safestring",
        "description": "django.utils.safestring",
        "isExtraImport": true,
        "detail": "django.utils.safestring",
        "documentation": {}
    },
    {
        "label": "mark_safe",
        "importPath": "django.utils.safestring",
        "description": "django.utils.safestring",
        "isExtraImport": true,
        "detail": "django.utils.safestring",
        "documentation": {}
    },
    {
        "label": "mark_safe",
        "importPath": "django.utils.safestring",
        "description": "django.utils.safestring",
        "isExtraImport": true,
        "detail": "django.utils.safestring",
        "documentation": {}
    },
    {
        "label": "mark_safe",
        "importPath": "django.utils.safestring",
        "description": "django.utils.safestring",
        "isExtraImport": true,
        "detail": "django.utils.safestring",
        "documentation": {}
    },
    {
        "label": "mark_safe",
        "importPath": "django.utils.safestring",
        "description": "django.utils.safestring",
        "isExtraImport": true,
        "detail": "django.utils.safestring",
        "documentation": {}
    },
    {
        "label": "get_user_model",
        "importPath": "django.contrib.auth",
        "description": "django.contrib.auth",
        "isExtraImport": true,
        "detail": "django.contrib.auth",
        "documentation": {}
    },
    {
        "label": "get_user_model",
        "importPath": "django.contrib.auth",
        "description": "django.contrib.auth",
        "isExtraImport": true,
        "detail": "django.contrib.auth",
        "documentation": {}
    },
    {
        "label": "get_user_model",
        "importPath": "django.contrib.auth",
        "description": "django.contrib.auth",
        "isExtraImport": true,
        "detail": "django.contrib.auth",
        "documentation": {}
    },
    {
        "label": "get_user_model",
        "importPath": "django.contrib.auth",
        "description": "django.contrib.auth",
        "isExtraImport": true,
        "detail": "django.contrib.auth",
        "documentation": {}
    },
    {
        "label": "get_user_model",
        "importPath": "django.contrib.auth",
        "description": "django.contrib.auth",
        "isExtraImport": true,
        "detail": "django.contrib.auth",
        "documentation": {}
    },
    {
        "label": "get_user_model",
        "importPath": "django.contrib.auth",
        "description": "django.contrib.auth",
        "isExtraImport": true,
        "detail": "django.contrib.auth",
        "documentation": {}
    },
    {
        "label": "get_user_model",
        "importPath": "django.contrib.auth",
        "description": "django.contrib.auth",
        "isExtraImport": true,
        "detail": "django.contrib.auth",
        "documentation": {}
    },
    {
        "label": "get_user_model",
        "importPath": "django.contrib.auth",
        "description": "django.contrib.auth",
        "isExtraImport": true,
        "detail": "django.contrib.auth",
        "documentation": {}
    },
    {
        "label": "get_user_model",
        "importPath": "django.contrib.auth",
        "description": "django.contrib.auth",
        "isExtraImport": true,
        "detail": "django.contrib.auth",
        "documentation": {}
    },
    {
        "label": "get_user_model",
        "importPath": "django.contrib.auth",
        "description": "django.contrib.auth",
        "isExtraImport": true,
        "detail": "django.contrib.auth",
        "documentation": {}
    },
    {
        "label": "get_user_model",
        "importPath": "django.contrib.auth",
        "description": "django.contrib.auth",
        "isExtraImport": true,
        "detail": "django.contrib.auth",
        "documentation": {}
    },
    {
        "label": "get_user_model",
        "importPath": "django.contrib.auth",
        "description": "django.contrib.auth",
        "isExtraImport": true,
        "detail": "django.contrib.auth",
        "documentation": {}
    },
    {
        "label": "get_user_model",
        "importPath": "django.contrib.auth",
        "description": "django.contrib.auth",
        "isExtraImport": true,
        "detail": "django.contrib.auth",
        "documentation": {}
    },
    {
        "label": "get_user_model",
        "importPath": "django.contrib.auth",
        "description": "django.contrib.auth",
        "isExtraImport": true,
        "detail": "django.contrib.auth",
        "documentation": {}
    },
    {
        "label": "views",
        "importPath": "django.contrib.auth",
        "description": "django.contrib.auth",
        "isExtraImport": true,
        "detail": "django.contrib.auth",
        "documentation": {}
    },
    {
        "label": "login",
        "importPath": "django.contrib.auth",
        "description": "django.contrib.auth",
        "isExtraImport": true,
        "detail": "django.contrib.auth",
        "documentation": {}
    },
    {
        "label": "get_user_model",
        "importPath": "django.contrib.auth",
        "description": "django.contrib.auth",
        "isExtraImport": true,
        "detail": "django.contrib.auth",
        "documentation": {}
    },
    {
        "label": "login_required",
        "importPath": "django.contrib.auth.decorators",
        "description": "django.contrib.auth.decorators",
        "isExtraImport": true,
        "detail": "django.contrib.auth.decorators",
        "documentation": {}
    },
    {
        "label": "login_required",
        "importPath": "django.contrib.auth.decorators",
        "description": "django.contrib.auth.decorators",
        "isExtraImport": true,
        "detail": "django.contrib.auth.decorators",
        "documentation": {}
    },
    {
        "label": "login_required",
        "importPath": "django.contrib.auth.decorators",
        "description": "django.contrib.auth.decorators",
        "isExtraImport": true,
        "detail": "django.contrib.auth.decorators",
        "documentation": {}
    },
    {
        "label": "login_required",
        "importPath": "django.contrib.auth.decorators",
        "description": "django.contrib.auth.decorators",
        "isExtraImport": true,
        "detail": "django.contrib.auth.decorators",
        "documentation": {}
    },
    {
        "label": "login_required",
        "importPath": "django.contrib.auth.decorators",
        "description": "django.contrib.auth.decorators",
        "isExtraImport": true,
        "detail": "django.contrib.auth.decorators",
        "documentation": {}
    },
    {
        "label": "login_required",
        "importPath": "django.contrib.auth.decorators",
        "description": "django.contrib.auth.decorators",
        "isExtraImport": true,
        "detail": "django.contrib.auth.decorators",
        "documentation": {}
    },
    {
        "label": "Decimal",
        "importPath": "decimal",
        "description": "decimal",
        "isExtraImport": true,
        "detail": "decimal",
        "documentation": {}
    },
    {
        "label": "Decimal",
        "importPath": "decimal",
        "description": "decimal",
        "isExtraImport": true,
        "detail": "decimal",
        "documentation": {}
    },
    {
        "label": "Decimal",
        "importPath": "decimal",
        "description": "decimal",
        "isExtraImport": true,
        "detail": "decimal",
        "documentation": {}
    },
    {
        "label": "Decimal",
        "importPath": "decimal",
        "description": "decimal",
        "isExtraImport": true,
        "detail": "decimal",
        "documentation": {}
    },
    {
        "label": "BaseCommand",
        "importPath": "django.core.management.base",
        "description": "django.core.management.base",
        "isExtraImport": true,
        "detail": "django.core.management.base",
        "documentation": {}
    },
    {
        "label": "BaseCommand",
        "importPath": "django.core.management.base",
        "description": "django.core.management.base",
        "isExtraImport": true,
        "detail": "django.core.management.base",
        "documentation": {}
    },
    {
        "label": "BaseCommand",
        "importPath": "django.core.management.base",
        "description": "django.core.management.base",
        "isExtraImport": true,
        "detail": "django.core.management.base",
        "documentation": {}
    },
    {
        "label": "BaseCommand",
        "importPath": "django.core.management.base",
        "description": "django.core.management.base",
        "isExtraImport": true,
        "detail": "django.core.management.base",
        "documentation": {}
    },
    {
        "label": "BaseCommand",
        "importPath": "django.core.management.base",
        "description": "django.core.management.base",
        "isExtraImport": true,
        "detail": "django.core.management.base",
        "documentation": {}
    },
    {
        "label": "Category",
        "importPath": "categories.models",
        "description": "categories.models",
        "isExtraImport": true,
        "detail": "categories.models",
        "documentation": {}
    },
    {
        "label": "Category",
        "importPath": "categories.models",
        "description": "categories.models",
        "isExtraImport": true,
        "detail": "categories.models",
        "documentation": {}
    },
    {
        "label": "Category",
        "importPath": "categories.models",
        "description": "categories.models",
        "isExtraImport": true,
        "detail": "categories.models",
        "documentation": {}
    },
    {
        "label": "Category",
        "importPath": "categories.models",
        "description": "categories.models",
        "isExtraImport": true,
        "detail": "categories.models",
        "documentation": {}
    },
    {
        "label": "Category",
        "importPath": "categories.models",
        "description": "categories.models",
        "isExtraImport": true,
        "detail": "categories.models",
        "documentation": {}
    },
    {
        "label": "Category",
        "importPath": "categories.models",
        "description": "categories.models",
        "isExtraImport": true,
        "detail": "categories.models",
        "documentation": {}
    },
    {
        "label": "Category",
        "importPath": "categories.models",
        "description": "categories.models",
        "isExtraImport": true,
        "detail": "categories.models",
        "documentation": {}
    },
    {
        "label": "Category",
        "importPath": "categories.models",
        "description": "categories.models",
        "isExtraImport": true,
        "detail": "categories.models",
        "documentation": {}
    },
    {
        "label": "TemplateResponse",
        "importPath": "django.template.response",
        "description": "django.template.response",
        "isExtraImport": true,
        "detail": "django.template.response",
        "documentation": {}
    },
    {
        "label": "AdminSite",
        "importPath": "django.contrib.admin",
        "description": "django.contrib.admin",
        "isExtraImport": true,
        "detail": "django.contrib.admin",
        "documentation": {}
    },
    {
        "label": "SimpleListFilter",
        "importPath": "django.contrib.admin",
        "description": "django.contrib.admin",
        "isExtraImport": true,
        "detail": "django.contrib.admin",
        "documentation": {}
    },
    {
        "label": "ProductAdmin",
        "importPath": "products.admin",
        "description": "products.admin",
        "isExtraImport": true,
        "detail": "products.admin",
        "documentation": {}
    },
    {
        "label": "CarAdmin",
        "importPath": "products.admin",
        "description": "products.admin",
        "isExtraImport": true,
        "detail": "products.admin",
        "documentation": {}
    },
    {
        "label": "RealEstateAdmin",
        "importPath": "products.admin",
        "description": "products.admin",
        "isExtraImport": true,
        "detail": "products.admin",
        "documentation": {}
    },
    {
        "label": "HotelBookingAdmin",
        "importPath": "products.admin",
        "description": "products.admin",
        "isExtraImport": true,
        "detail": "products.admin",
        "documentation": {}
    },
    {
        "label": "ProductImageAdmin",
        "importPath": "products.admin",
        "description": "products.admin",
        "isExtraImport": true,
        "detail": "products.admin",
        "documentation": {}
    },
    {
        "label": "CategoryAdmin",
        "importPath": "categories.admin",
        "description": "categories.admin",
        "isExtraImport": true,
        "detail": "categories.admin",
        "documentation": {}
    },
    {
        "label": "CustomUserAdmin",
        "importPath": "users.admin",
        "description": "users.admin",
        "isExtraImport": true,
        "detail": "users.admin",
        "documentation": {}
    },
    {
        "label": "MessageAdmin",
        "importPath": "messaging.admin",
        "description": "messaging.admin",
        "isExtraImport": true,
        "detail": "messaging.admin",
        "documentation": {}
    },
    {
        "label": "ConversationAdmin",
        "importPath": "messaging.admin",
        "description": "messaging.admin",
        "isExtraImport": true,
        "detail": "messaging.admin",
        "documentation": {}
    },
    {
        "label": "OrderAdmin",
        "importPath": "orders.admin",
        "description": "orders.admin",
        "isExtraImport": true,
        "detail": "orders.admin",
        "documentation": {}
    },
    {
        "label": "ReviewAdmin",
        "importPath": "reviews.admin",
        "description": "reviews.admin",
        "isExtraImport": true,
        "detail": "reviews.admin",
        "documentation": {}
    },
    {
        "label": "AuctionAdmin",
        "importPath": "auctions.admin",
        "description": "auctions.admin",
        "isExtraImport": true,
        "detail": "auctions.admin",
        "documentation": {}
    },
    {
        "label": "BidAdmin",
        "importPath": "auctions.admin",
        "description": "auctions.admin",
        "isExtraImport": true,
        "detail": "auctions.admin",
        "documentation": {}
    },
    {
        "label": "os",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "os",
        "description": "os",
        "detail": "os",
        "documentation": {}
    },
    {
        "label": "get_asgi_application",
        "importPath": "django.core.asgi",
        "description": "django.core.asgi",
        "isExtraImport": true,
        "detail": "django.core.asgi",
        "documentation": {}
    },
    {
        "label": "Path",
        "importPath": "pathlib",
        "description": "pathlib",
        "isExtraImport": true,
        "detail": "pathlib",
        "documentation": {}
    },
    {
        "label": "mark_messages_read_admin",
        "importPath": "messaging.views",
        "description": "messaging.views",
        "isExtraImport": true,
        "detail": "messaging.views",
        "documentation": {}
    },
    {
        "label": "get_wsgi_application",
        "importPath": "django.core.wsgi",
        "description": "django.core.wsgi",
        "isExtraImport": true,
        "detail": "django.core.wsgi",
        "documentation": {}
    },
    {
        "label": "json",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "json",
        "description": "json",
        "detail": "json",
        "documentation": {}
    },
    {
        "label": "csrf_exempt",
        "importPath": "django.views.decorators.csrf",
        "description": "django.views.decorators.csrf",
        "isExtraImport": true,
        "detail": "django.views.decorators.csrf",
        "documentation": {}
    },
    {
        "label": "csrf_exempt",
        "importPath": "django.views.decorators.csrf",
        "description": "django.views.decorators.csrf",
        "isExtraImport": true,
        "detail": "django.views.decorators.csrf",
        "documentation": {}
    },
    {
        "label": "require_http_methods",
        "importPath": "django.views.decorators.http",
        "description": "django.views.decorators.http",
        "isExtraImport": true,
        "detail": "django.views.decorators.http",
        "documentation": {}
    },
    {
        "label": "random",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "random",
        "description": "random",
        "detail": "random",
        "documentation": {}
    },
    {
        "label": "django",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "django",
        "description": "django",
        "detail": "django",
        "documentation": {}
    },
    {
        "label": "forms",
        "importPath": "django",
        "description": "django",
        "isExtraImport": true,
        "detail": "django",
        "documentation": {}
    },
    {
        "label": "forms",
        "importPath": "django",
        "description": "django",
        "isExtraImport": true,
        "detail": "django",
        "documentation": {}
    },
    {
        "label": "LoginRequiredMixin",
        "importPath": "django.contrib.auth.mixins",
        "description": "django.contrib.auth.mixins",
        "isExtraImport": true,
        "detail": "django.contrib.auth.mixins",
        "documentation": {}
    },
    {
        "label": "LoginRequiredMixin",
        "importPath": "django.contrib.auth.mixins",
        "description": "django.contrib.auth.mixins",
        "isExtraImport": true,
        "detail": "django.contrib.auth.mixins",
        "documentation": {}
    },
    {
        "label": "django.contrib.auth.models",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "django.contrib.auth.models",
        "description": "django.contrib.auth.models",
        "detail": "django.contrib.auth.models",
        "documentation": {}
    },
    {
        "label": "AbstractUser",
        "importPath": "django.contrib.auth.models",
        "description": "django.contrib.auth.models",
        "isExtraImport": true,
        "detail": "django.contrib.auth.models",
        "documentation": {}
    },
    {
        "label": "django.contrib.auth.validators",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "django.contrib.auth.validators",
        "description": "django.contrib.auth.validators",
        "detail": "django.contrib.auth.validators",
        "documentation": {}
    },
    {
        "label": "django.utils.timezone",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "django.utils.timezone",
        "description": "django.utils.timezone",
        "detail": "django.utils.timezone",
        "documentation": {}
    },
    {
        "label": "UserAdmin",
        "importPath": "django.contrib.auth.admin",
        "description": "django.contrib.auth.admin",
        "isExtraImport": true,
        "detail": "django.contrib.auth.admin",
        "documentation": {}
    },
    {
        "label": "UserCreationForm",
        "importPath": "django.contrib.auth.forms",
        "description": "django.contrib.auth.forms",
        "isExtraImport": true,
        "detail": "django.contrib.auth.forms",
        "documentation": {}
    },
    {
        "label": "sys",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "sys",
        "description": "sys",
        "detail": "sys",
        "documentation": {}
    },
    {
        "label": "AdminPanelConfig",
        "kind": 6,
        "importPath": "admin_panel.apps",
        "description": "admin_panel.apps",
        "peekOfCode": "class AdminPanelConfig(AppConfig):\n    default_auto_field = 'django.db.models.BigAutoField'\n    name = 'admin_panel'",
        "detail": "admin_panel.apps",
        "documentation": {}
    },
    {
        "label": "app_name",
        "kind": 5,
        "importPath": "admin_panel.urls",
        "description": "admin_panel.urls",
        "peekOfCode": "app_name = 'admin_panel'\nurlpatterns = [\n    path('', views.admin_dashboard, name='dashboard'),\n    path('products/pending/', views.pending_products, name='pending_products'),\n    path('products/<int:product_id>/approve/', views.approve_product, name='approve_product'),\n    path('products/<int:product_id>/reject/', views.reject_product, name='reject_product'),\n    path('products/<int:product_id>/', views.product_detail_admin, name='product_detail'),\n    path('users/', views.users_management, name='users_management'),\n    path('users/<int:user_id>/verify/', views.verify_user, name='verify_user'),\n    path('users/<int:user_id>/suspend/', views.suspend_user, name='suspend_user'),",
        "detail": "admin_panel.urls",
        "documentation": {}
    },
    {
        "label": "urlpatterns",
        "kind": 5,
        "importPath": "admin_panel.urls",
        "description": "admin_panel.urls",
        "peekOfCode": "urlpatterns = [\n    path('', views.admin_dashboard, name='dashboard'),\n    path('products/pending/', views.pending_products, name='pending_products'),\n    path('products/<int:product_id>/approve/', views.approve_product, name='approve_product'),\n    path('products/<int:product_id>/reject/', views.reject_product, name='reject_product'),\n    path('products/<int:product_id>/', views.product_detail_admin, name='product_detail'),\n    path('users/', views.users_management, name='users_management'),\n    path('users/<int:user_id>/verify/', views.verify_user, name='verify_user'),\n    path('users/<int:user_id>/suspend/', views.suspend_user, name='suspend_user'),\n    path('reports/', views.reports_analytics, name='reports'),",
        "detail": "admin_panel.urls",
        "documentation": {}
    },
    {
        "label": "admin_dashboard",
        "kind": 2,
        "importPath": "admin_panel.views",
        "description": "admin_panel.views",
        "peekOfCode": "def admin_dashboard(request):\n    \"\"\"لوحة التحكم الرئيسية للمسؤول\"\"\"\n    # إحصائيات عامة\n    total_products = Product.objects.count()\n    pending_products = Product.objects.filter(status='pending_approval').count()\n    active_products = Product.objects.filter(status='active').count()\n    total_users = User.objects.count()\n    new_users_today = User.objects.filter(date_joined__date=timezone.now().date()).count()\n    # إحصائيات المزادات\n    active_auctions = Auction.objects.filter(status='active').count()",
        "detail": "admin_panel.views",
        "documentation": {}
    },
    {
        "label": "pending_products",
        "kind": 2,
        "importPath": "admin_panel.views",
        "description": "admin_panel.views",
        "peekOfCode": "def pending_products(request):\n    \"\"\"عرض المنتجات المعلقة للموافقة\"\"\"\n    products = Product.objects.filter(\n        status='pending_approval'\n    ).select_related('seller', 'category').order_by('-created_at')\n    # تصفية حسب الفئة\n    category = request.GET.get('category')\n    if category:\n        products = products.filter(category__slug=category)\n    # تصفية حسب البائع",
        "detail": "admin_panel.views",
        "documentation": {}
    },
    {
        "label": "approve_product",
        "kind": 2,
        "importPath": "admin_panel.views",
        "description": "admin_panel.views",
        "peekOfCode": "def approve_product(request, product_id):\n    \"\"\"الموافقة على منتج\"\"\"\n    product = get_object_or_404(Product, id=product_id)\n    if request.method == 'POST':\n        product.status = 'active'\n        product.is_approved = True\n        product.save()\n        messages.success(request, f'تمت الموافقة على المنتج \"{product.title}\" بنجاح')\n        # إرسال إشعار للبائع (يمكن تطويره لاحقاً)\n        return JsonResponse({'success': True, 'message': 'تمت الموافقة بنجاح'})",
        "detail": "admin_panel.views",
        "documentation": {}
    },
    {
        "label": "reject_product",
        "kind": 2,
        "importPath": "admin_panel.views",
        "description": "admin_panel.views",
        "peekOfCode": "def reject_product(request, product_id):\n    \"\"\"رفض منتج\"\"\"\n    product = get_object_or_404(Product, id=product_id)\n    if request.method == 'POST':\n        reason = request.POST.get('reason', '')\n        product.status = 'cancelled'\n        product.save()\n        # يمكن حفظ سبب الرفض في نموذج منفصل\n        messages.success(request, f'تم رفض المنتج \"{product.title}\"')\n        return JsonResponse({'success': True, 'message': 'تم الرفض بنجاح'})",
        "detail": "admin_panel.views",
        "documentation": {}
    },
    {
        "label": "product_detail_admin",
        "kind": 2,
        "importPath": "admin_panel.views",
        "description": "admin_panel.views",
        "peekOfCode": "def product_detail_admin(request, product_id):\n    \"\"\"عرض تفاصيل المنتج للمسؤول\"\"\"\n    product = get_object_or_404(Product, id=product_id)\n    # جلب التفاصيل الإضافية حسب نوع المنتج\n    product_details = None\n    if hasattr(product, 'car_details'):\n        product_details = product.car_details\n    elif hasattr(product, 'realestate_details'):\n        product_details = product.realestate_details\n    elif hasattr(product, 'hotel_details'):",
        "detail": "admin_panel.views",
        "documentation": {}
    },
    {
        "label": "users_management",
        "kind": 2,
        "importPath": "admin_panel.views",
        "description": "admin_panel.views",
        "peekOfCode": "def users_management(request):\n    \"\"\"إدارة المستخدمين\"\"\"\n    users = User.objects.all().order_by('-date_joined')\n    # تصفية حسب نوع المستخدم\n    user_type = request.GET.get('type')\n    if user_type == 'sellers':\n        users = users.filter(is_seller=True)\n    elif user_type == 'verified':\n        users = users.filter(is_admin_verified=True)\n    elif user_type == 'staff':",
        "detail": "admin_panel.views",
        "documentation": {}
    },
    {
        "label": "verify_user",
        "kind": 2,
        "importPath": "admin_panel.views",
        "description": "admin_panel.views",
        "peekOfCode": "def verify_user(request, user_id):\n    \"\"\"التحقق من المستخدم\"\"\"\n    user = get_object_or_404(User, id=user_id)\n    if request.method == 'POST':\n        user.is_admin_verified = True\n        user.save()\n        messages.success(request, f'تم التحقق من المستخدم {user.username} بنجاح')\n        return JsonResponse({'success': True})\n    return JsonResponse({'success': False, 'error': 'طريقة غير مسموحة'})\n@staff_member_required",
        "detail": "admin_panel.views",
        "documentation": {}
    },
    {
        "label": "suspend_user",
        "kind": 2,
        "importPath": "admin_panel.views",
        "description": "admin_panel.views",
        "peekOfCode": "def suspend_user(request, user_id):\n    \"\"\"تعليق المستخدم\"\"\"\n    user = get_object_or_404(User, id=user_id)\n    if request.method == 'POST':\n        user.is_active = False\n        user.save()\n        messages.success(request, f'تم تعليق المستخدم {user.username}')\n        return JsonResponse({'success': True})\n    return JsonResponse({'success': False, 'error': 'طريقة غير مسموحة'})\n@staff_member_required",
        "detail": "admin_panel.views",
        "documentation": {}
    },
    {
        "label": "reports_analytics",
        "kind": 2,
        "importPath": "admin_panel.views",
        "description": "admin_panel.views",
        "peekOfCode": "def reports_analytics(request):\n    \"\"\"التقارير والإحصائيات\"\"\"\n    # إحصائيات المنتجات حسب الفئة\n    products_by_category = Product.objects.values('category__name').annotate(\n        count=Count('id')\n    ).order_by('-count')\n    # إحصائيات المنتجات حسب الحالة\n    products_by_status = Product.objects.values('status').annotate(\n        count=Count('id')\n    )",
        "detail": "admin_panel.views",
        "documentation": {}
    },
    {
        "label": "system_settings",
        "kind": 2,
        "importPath": "admin_panel.views",
        "description": "admin_panel.views",
        "peekOfCode": "def system_settings(request):\n    \"\"\"إعدادات النظام\"\"\"\n    if request.method == 'POST':\n        # معالجة تحديث الإعدادات\n        # يمكن إضافة نموذج للإعدادات لاحقاً\n        messages.success(request, 'تم تحديث الإعدادات بنجاح')\n        return redirect('admin_panel:settings')\n    return render(request, 'admin_panel/settings.html')\n@staff_member_required\ndef bulk_actions(request):",
        "detail": "admin_panel.views",
        "documentation": {}
    },
    {
        "label": "bulk_actions",
        "kind": 2,
        "importPath": "admin_panel.views",
        "description": "admin_panel.views",
        "peekOfCode": "def bulk_actions(request):\n    \"\"\"الإجراءات المجمعة\"\"\"\n    if request.method == 'POST':\n        action = request.POST.get('action')\n        product_ids = request.POST.getlist('product_ids')\n        if not product_ids:\n            return JsonResponse({'success': False, 'error': 'لم يتم اختيار منتجات'})\n        products = Product.objects.filter(id__in=product_ids)\n        if action == 'approve':\n            products.update(status='active', is_approved=True)",
        "detail": "admin_panel.views",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "auctions.migrations.0001_initial",
        "description": "auctions.migrations.0001_initial",
        "peekOfCode": "class Migration(migrations.Migration):\n    initial = True\n    dependencies = [\n    ]\n    operations = [\n        migrations.CreateModel(\n            name='Auction',\n            fields=[\n                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),\n                ('start_time', models.DateTimeField()),",
        "detail": "auctions.migrations.0001_initial",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "auctions.migrations.0002_initial",
        "description": "auctions.migrations.0002_initial",
        "peekOfCode": "class Migration(migrations.Migration):\n    initial = True\n    dependencies = [\n        ('products', '0001_initial'),\n        ('auctions', '0001_initial'),\n        migrations.swappable_dependency(settings.AUTH_USER_MODEL),\n    ]\n    operations = [\n        migrations.AddField(\n            model_name='bid',",
        "detail": "auctions.migrations.0002_initial",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "auctions.migrations.0003_alter_bid_options_rename_timestamp_bid_bid_time_and_more",
        "description": "auctions.migrations.0003_alter_bid_options_rename_timestamp_bid_bid_time_and_more",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('auctions', '0002_initial'),\n    ]\n    operations = [\n        migrations.AlterModelOptions(\n            name='bid',\n            options={'ordering': ['-amount', '-bid_time']},\n        ),\n        migrations.RenameField(",
        "detail": "auctions.migrations.0003_alter_bid_options_rename_timestamp_bid_bid_time_and_more",
        "documentation": {}
    },
    {
        "label": "BidInline",
        "kind": 6,
        "importPath": "auctions.admin",
        "description": "auctions.admin",
        "peekOfCode": "class BidInline(admin.TabularInline):\n    model = Bid\n    extra = 0\n    readonly_fields = ['bid_time', 'is_winning']\n    fields = ['bidder', 'amount', 'bid_time', 'is_winning']\n    ordering = ['-amount', '-bid_time']\n    def has_add_permission(self, request, obj=None):\n        return False  # منع إضافة مزايدات من الإدارة\n@admin.register(Auction)\nclass AuctionAdmin(admin.ModelAdmin):",
        "detail": "auctions.admin",
        "documentation": {}
    },
    {
        "label": "AuctionAdmin",
        "kind": 6,
        "importPath": "auctions.admin",
        "description": "auctions.admin",
        "peekOfCode": "class AuctionAdmin(admin.ModelAdmin):\n    list_display = [\n        'id', 'product_info', 'time_info', 'bid_info', \n        'status_badge', 'auction_progress'\n    ]\n    list_filter = [\n        'status', 'start_time', 'end_time', 'product__category',\n        'product__seller__is_seller'\n    ]\n    search_fields = [",
        "detail": "auctions.admin",
        "documentation": {}
    },
    {
        "label": "BidAdmin",
        "kind": 6,
        "importPath": "auctions.admin",
        "description": "auctions.admin",
        "peekOfCode": "class BidAdmin(admin.ModelAdmin):\n    list_display = [\n        'id', 'auction_info', 'bidder_info', 'amount_formatted', \n        'bid_time', 'is_winning_badge'\n    ]\n    list_filter = [\n        'bid_time', 'is_winning', 'auction__status',\n        'bidder__is_seller'\n    ]\n    search_fields = [",
        "detail": "auctions.admin",
        "documentation": {}
    },
    {
        "label": "AuctionsConfig",
        "kind": 6,
        "importPath": "auctions.apps",
        "description": "auctions.apps",
        "peekOfCode": "class AuctionsConfig(AppConfig):\n    default_auto_field = 'django.db.models.BigAutoField'\n    name = 'auctions'",
        "detail": "auctions.apps",
        "documentation": {}
    },
    {
        "label": "Auction",
        "kind": 6,
        "importPath": "auctions.models",
        "description": "auctions.models",
        "peekOfCode": "class Auction(models.Model):\n    STATUS_CHOICES = [\n        ('active', 'Active'),\n        ('closed', 'Closed'),\n        ('cancelled', 'Cancelled'),\n    ]\n    product = models.OneToOneField(Product, on_delete=models.CASCADE, related_name='auction')\n    start_time = models.DateTimeField()\n    end_time = models.DateTimeField()\n    starting_bid = models.DecimalField(max_digits=10, decimal_places=2)",
        "detail": "auctions.models",
        "documentation": {}
    },
    {
        "label": "Bid",
        "kind": 6,
        "importPath": "auctions.models",
        "description": "auctions.models",
        "peekOfCode": "class Bid(models.Model):\n    auction = models.ForeignKey(Auction, on_delete=models.CASCADE, related_name='bids')\n    bidder = models.ForeignKey(User, on_delete=models.CASCADE, related_name='bids')\n    amount = models.DecimalField(max_digits=10, decimal_places=2)\n    bid_time = models.DateTimeField(auto_now_add=True)\n    is_winning = models.BooleanField(default=False)\n    class Meta:\n        ordering = ['-amount', '-bid_time']\n    def __str__(self):\n        return \"Bid of {} by {}\".format(self.amount, self.bidder.username)",
        "detail": "auctions.models",
        "documentation": {}
    },
    {
        "label": "User",
        "kind": 5,
        "importPath": "auctions.models",
        "description": "auctions.models",
        "peekOfCode": "User = get_user_model()\nclass Auction(models.Model):\n    STATUS_CHOICES = [\n        ('active', 'Active'),\n        ('closed', 'Closed'),\n        ('cancelled', 'Cancelled'),\n    ]\n    product = models.OneToOneField(Product, on_delete=models.CASCADE, related_name='auction')\n    start_time = models.DateTimeField()\n    end_time = models.DateTimeField()",
        "detail": "auctions.models",
        "documentation": {}
    },
    {
        "label": "app_name",
        "kind": 5,
        "importPath": "auctions.urls",
        "description": "auctions.urls",
        "peekOfCode": "app_name = 'auctions'\nurlpatterns = [\n    path('', views.auction_list, name='list'),\n    path('<int:auction_id>/', views.auction_detail, name='detail'),\n    path('create/<int:product_id>/', views.create_auction, name='create'),\n    path('bid/<int:auction_id>/', views.place_bid, name='place_bid'),\n    path('my-auctions/', views.my_auctions, name='my_auctions'),\n    path('cancel/<int:auction_id>/', views.cancel_auction, name='cancel'),\n]",
        "detail": "auctions.urls",
        "documentation": {}
    },
    {
        "label": "urlpatterns",
        "kind": 5,
        "importPath": "auctions.urls",
        "description": "auctions.urls",
        "peekOfCode": "urlpatterns = [\n    path('', views.auction_list, name='list'),\n    path('<int:auction_id>/', views.auction_detail, name='detail'),\n    path('create/<int:product_id>/', views.create_auction, name='create'),\n    path('bid/<int:auction_id>/', views.place_bid, name='place_bid'),\n    path('my-auctions/', views.my_auctions, name='my_auctions'),\n    path('cancel/<int:auction_id>/', views.cancel_auction, name='cancel'),\n]",
        "detail": "auctions.urls",
        "documentation": {}
    },
    {
        "label": "auction_list",
        "kind": 2,
        "importPath": "auctions.views",
        "description": "auctions.views",
        "peekOfCode": "def auction_list(request):\n    \"\"\"عرض قائمة المزادات النشطة\"\"\"\n    active_auctions = Auction.objects.filter(\n        status='active',\n        end_time__gt=timezone.now()\n    ).order_by('end_time')\n    return render(request, 'auctions/auction_list.html', {\n        'auctions': active_auctions\n    })\n@login_required",
        "detail": "auctions.views",
        "documentation": {}
    },
    {
        "label": "auction_detail",
        "kind": 2,
        "importPath": "auctions.views",
        "description": "auctions.views",
        "peekOfCode": "def auction_detail(request, auction_id):\n    \"\"\"عرض تفاصيل المزاد\"\"\"\n    auction = get_object_or_404(Auction, id=auction_id)\n    # جلب المزايدات مرتبة حسب المبلغ\n    bids = auction.bids.order_by('-amount', '-timestamp')\n    # التحقق من انتهاء المزاد\n    if auction.end_time <= timezone.now() and auction.status == 'active':\n        auction.status = 'closed'\n        auction.save()\n        # تحديد الفائز",
        "detail": "auctions.views",
        "documentation": {}
    },
    {
        "label": "create_auction",
        "kind": 2,
        "importPath": "auctions.views",
        "description": "auctions.views",
        "peekOfCode": "def create_auction(request, product_id):\n    \"\"\"إنشاء مزاد جديد لمنتج\"\"\"\n    product = get_object_or_404(Product, id=product_id, seller=request.user)\n    # التحقق من عدم وجود مزاد مسبق\n    if hasattr(product, 'auction'):\n        messages.error(request, 'يوجد مزاد مسبق لهذا المنتج')\n        return redirect('products:detail', product_id=product.id)\n    if request.method == 'POST':\n        starting_bid = request.POST.get('starting_bid')\n        duration_hours = int(request.POST.get('duration_hours', 24))",
        "detail": "auctions.views",
        "documentation": {}
    },
    {
        "label": "place_bid",
        "kind": 2,
        "importPath": "auctions.views",
        "description": "auctions.views",
        "peekOfCode": "def place_bid(request, auction_id):\n    \"\"\"وضع مزايدة جديدة\"\"\"\n    auction = get_object_or_404(Auction, id=auction_id)\n    # التحقق من صحة المزاد\n    if auction.status != 'active':\n        return JsonResponse({'success': False, 'error': 'المزاد غير نشط'})\n    if auction.end_time <= timezone.now():\n        return JsonResponse({'success': False, 'error': 'انتهى وقت المزاد'})\n    if auction.product.seller == request.user:\n        return JsonResponse({'success': False, 'error': 'لا يمكنك المزايدة على منتجك'})",
        "detail": "auctions.views",
        "documentation": {}
    },
    {
        "label": "my_auctions",
        "kind": 2,
        "importPath": "auctions.views",
        "description": "auctions.views",
        "peekOfCode": "def my_auctions(request):\n    \"\"\"عرض مزادات المستخدم\"\"\"\n    # المزادات التي أنشأها المستخدم\n    created_auctions = Auction.objects.filter(\n        product__seller=request.user\n    ).order_by('-created_at')\n    # المزادات التي شارك فيها المستخدم\n    participated_auctions = Auction.objects.filter(\n        bids__bidder=request.user\n    ).distinct().order_by('-created_at')",
        "detail": "auctions.views",
        "documentation": {}
    },
    {
        "label": "cancel_auction",
        "kind": 2,
        "importPath": "auctions.views",
        "description": "auctions.views",
        "peekOfCode": "def cancel_auction(request, auction_id):\n    \"\"\"إلغاء المزاد\"\"\"\n    auction = get_object_or_404(\n        Auction, \n        id=auction_id, \n        product__seller=request.user,\n        status='active'\n    )\n    if request.method == 'POST':\n        auction.status = 'cancelled'",
        "detail": "auctions.views",
        "documentation": {}
    },
    {
        "label": "Command",
        "kind": 6,
        "importPath": "categories.management.commands.create_categories",
        "description": "categories.management.commands.create_categories",
        "peekOfCode": "class Command(BaseCommand):\n    help = 'إنشاء الفئات الأساسية للموقع'\n    def handle(self, *args, **options):\n        categories_data = [\n            {\n                'name': 'السيارات',\n                'slug': 'cars',\n                'subcategories': [\n                    {'name': 'سيارات جديدة', 'slug': 'new-cars'},\n                    {'name': 'سيارات مستعملة', 'slug': 'used-cars'},",
        "detail": "categories.management.commands.create_categories",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "categories.migrations.0001_initial",
        "description": "categories.migrations.0001_initial",
        "peekOfCode": "class Migration(migrations.Migration):\n    initial = True\n    dependencies = [\n    ]\n    operations = [\n        migrations.CreateModel(\n            name='Category',\n            fields=[\n                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),\n                ('name', models.CharField(max_length=100)),",
        "detail": "categories.migrations.0001_initial",
        "documentation": {}
    },
    {
        "label": "CategoryAdmin",
        "kind": 6,
        "importPath": "categories.admin",
        "description": "categories.admin",
        "peekOfCode": "class CategoryAdmin(admin.ModelAdmin):\n    list_display = [\n        'name_with_icon', 'parent_category', 'products_count', \n        'is_active_display', 'created_at_display', 'actions_display'\n    ]\n    list_filter = ['created_at', 'parent']\n    search_fields = ['name', 'slug']\n    list_per_page = 20\n    date_hierarchy = 'created_at'\n    ordering = ['name']",
        "detail": "categories.admin",
        "documentation": {}
    },
    {
        "label": "admin.site.site_header",
        "kind": 5,
        "importPath": "categories.admin",
        "description": "categories.admin",
        "peekOfCode": "admin.site.site_header = \"إدارة دلال السعودية\"\nadmin.site.site_title = \"دلال السعودية - الإدارة\"\nadmin.site.index_title = \"مرحباً في لوحة التحكم\"",
        "detail": "categories.admin",
        "documentation": {}
    },
    {
        "label": "admin.site.site_title",
        "kind": 5,
        "importPath": "categories.admin",
        "description": "categories.admin",
        "peekOfCode": "admin.site.site_title = \"دلال السعودية - الإدارة\"\nadmin.site.index_title = \"مرحباً في لوحة التحكم\"",
        "detail": "categories.admin",
        "documentation": {}
    },
    {
        "label": "admin.site.index_title",
        "kind": 5,
        "importPath": "categories.admin",
        "description": "categories.admin",
        "peekOfCode": "admin.site.index_title = \"مرحباً في لوحة التحكم\"",
        "detail": "categories.admin",
        "documentation": {}
    },
    {
        "label": "CategoriesConfig",
        "kind": 6,
        "importPath": "categories.apps",
        "description": "categories.apps",
        "peekOfCode": "class CategoriesConfig(AppConfig):\n    default_auto_field = 'django.db.models.BigAutoField'\n    name = 'categories'",
        "detail": "categories.apps",
        "documentation": {}
    },
    {
        "label": "Category",
        "kind": 6,
        "importPath": "categories.models",
        "description": "categories.models",
        "peekOfCode": "class Category(models.Model):\n    name = models.CharField(max_length=100)\n    slug = models.SlugField(unique=True)\n    parent = models.ForeignKey('self', on_delete=models.CASCADE, blank=True, null=True, related_name='subcategories')\n    created_at = models.DateTimeField(auto_now_add=True)\n    class Meta:\n        verbose_name_plural = \"Categories\"\n    def __str__(self):\n        return self.name\n    def get_full_path(self):",
        "detail": "categories.models",
        "documentation": {}
    },
    {
        "label": "app_name",
        "kind": 5,
        "importPath": "categories.urls",
        "description": "categories.urls",
        "peekOfCode": "app_name = 'categories'\nurlpatterns = [\n    path('', views.CategoryListView.as_view(), name='list'),\n    path('<slug:slug>/', views.CategoryDetailView.as_view(), name='detail'),\n]",
        "detail": "categories.urls",
        "documentation": {}
    },
    {
        "label": "urlpatterns",
        "kind": 5,
        "importPath": "categories.urls",
        "description": "categories.urls",
        "peekOfCode": "urlpatterns = [\n    path('', views.CategoryListView.as_view(), name='list'),\n    path('<slug:slug>/', views.CategoryDetailView.as_view(), name='detail'),\n]",
        "detail": "categories.urls",
        "documentation": {}
    },
    {
        "label": "CategoryListView",
        "kind": 6,
        "importPath": "categories.views",
        "description": "categories.views",
        "peekOfCode": "class CategoryListView(ListView):\n    model = Category\n    template_name = 'categories/list.html'\n    context_object_name = 'categories'\n    def get_queryset(self):\n        return Category.objects.filter(parent=None).annotate(\n            total_products=Count('products'),\n            active_products=Count('products', filter=Q(products__status='active'))\n        ).order_by('name')\nclass CategoryDetailView(DetailView):",
        "detail": "categories.views",
        "documentation": {}
    },
    {
        "label": "CategoryDetailView",
        "kind": 6,
        "importPath": "categories.views",
        "description": "categories.views",
        "peekOfCode": "class CategoryDetailView(DetailView):\n    model = Category\n    template_name = 'categories/detail.html'\n    context_object_name = 'category'\n    slug_field = 'slug'\n    slug_url_kwarg = 'slug'\n    def get_context_data(self, **kwargs):\n        context = super().get_context_data(**kwargs)\n        category = self.get_object()\n        context['products'] = Product.objects.filter(",
        "detail": "categories.views",
        "documentation": {}
    },
    {
        "label": "DalalSaudiAdminSite",
        "kind": 6,
        "importPath": "dalal_saudi.admin",
        "description": "dalal_saudi.admin",
        "peekOfCode": "class DalalSaudiAdminSite(AdminSite):\n    site_header = \"إدارة Dalal Alsaudia\"\n    site_title = \"Dalal Alsaudia - لوحة التحكم\"\n    index_title = \"مرحباً في لوحة التحكم الرئيسية\"\n    def get_urls(self):\n        urls = super().get_urls()\n        custom_urls = [\n            path('statistics/', self.admin_view(self.statistics_view), name='admin_statistics'),\n        ]\n        return custom_urls + urls",
        "detail": "dalal_saudi.admin",
        "documentation": {}
    },
    {
        "label": "User",
        "kind": 5,
        "importPath": "dalal_saudi.admin",
        "description": "dalal_saudi.admin",
        "peekOfCode": "User = get_user_model()\nclass DalalSaudiAdminSite(AdminSite):\n    site_header = \"إدارة Dalal Alsaudia\"\n    site_title = \"Dalal Alsaudia - لوحة التحكم\"\n    index_title = \"مرحباً في لوحة التحكم الرئيسية\"\n    def get_urls(self):\n        urls = super().get_urls()\n        custom_urls = [\n            path('statistics/', self.admin_view(self.statistics_view), name='admin_statistics'),\n        ]",
        "detail": "dalal_saudi.admin",
        "documentation": {}
    },
    {
        "label": "admin_site",
        "kind": 5,
        "importPath": "dalal_saudi.admin",
        "description": "dalal_saudi.admin",
        "peekOfCode": "admin_site = DalalSaudiAdminSite(name='dalal_admin')\n# تسجيل النماذج مع الموقع المخصص\nfrom products.admin import ProductAdmin, CarAdmin, RealEstateAdmin, HotelBookingAdmin, ProductImageAdmin\nfrom categories.admin import CategoryAdmin\nfrom users.admin import CustomUserAdmin\n# تسجيل النماذج الجديدة\nfrom messaging.admin import MessageAdmin, ConversationAdmin\nfrom orders.admin import OrderAdmin\nfrom reviews.admin import ReviewAdmin\nfrom auctions.admin import AuctionAdmin, BidAdmin",
        "detail": "dalal_saudi.admin",
        "documentation": {}
    },
    {
        "label": "application",
        "kind": 5,
        "importPath": "dalal_saudi.asgi",
        "description": "dalal_saudi.asgi",
        "peekOfCode": "application = get_asgi_application()",
        "detail": "dalal_saudi.asgi",
        "documentation": {}
    },
    {
        "label": "BASE_DIR",
        "kind": 5,
        "importPath": "dalal_saudi.settings",
        "description": "dalal_saudi.settings",
        "peekOfCode": "BASE_DIR = Path(__file__).resolve().parent.parent\n# SECURITY WARNING: keep the secret key used in production secret!\nSECRET_KEY = 'django-insecure-your-secret-key-here'\n# SECURITY WARNING: don't run with debug turned on in production!\nDEBUG = True\nALLOWED_HOSTS = ['*']\n# Application definition\nINSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',",
        "detail": "dalal_saudi.settings",
        "documentation": {}
    },
    {
        "label": "SECRET_KEY",
        "kind": 5,
        "importPath": "dalal_saudi.settings",
        "description": "dalal_saudi.settings",
        "peekOfCode": "SECRET_KEY = 'django-insecure-your-secret-key-here'\n# SECURITY WARNING: don't run with debug turned on in production!\nDEBUG = True\nALLOWED_HOSTS = ['*']\n# Application definition\nINSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',",
        "detail": "dalal_saudi.settings",
        "documentation": {}
    },
    {
        "label": "DEBUG",
        "kind": 5,
        "importPath": "dalal_saudi.settings",
        "description": "dalal_saudi.settings",
        "peekOfCode": "DEBUG = True\nALLOWED_HOSTS = ['*']\n# Application definition\nINSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.messages',\n    'django.contrib.staticfiles',",
        "detail": "dalal_saudi.settings",
        "documentation": {}
    },
    {
        "label": "ALLOWED_HOSTS",
        "kind": 5,
        "importPath": "dalal_saudi.settings",
        "description": "dalal_saudi.settings",
        "peekOfCode": "ALLOWED_HOSTS = ['*']\n# Application definition\nINSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.messages',\n    'django.contrib.staticfiles',\n    # Local apps",
        "detail": "dalal_saudi.settings",
        "documentation": {}
    },
    {
        "label": "INSTALLED_APPS",
        "kind": 5,
        "importPath": "dalal_saudi.settings",
        "description": "dalal_saudi.settings",
        "peekOfCode": "INSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.messages',\n    'django.contrib.staticfiles',\n    # Local apps\n    'users',\n    'products',",
        "detail": "dalal_saudi.settings",
        "documentation": {}
    },
    {
        "label": "MIDDLEWARE",
        "kind": 5,
        "importPath": "dalal_saudi.settings",
        "description": "dalal_saudi.settings",
        "peekOfCode": "MIDDLEWARE = [\n    'django.middleware.security.SecurityMiddleware',\n    'django.contrib.sessions.middleware.SessionMiddleware',\n    'django.middleware.common.CommonMiddleware',\n    'django.middleware.csrf.CsrfViewMiddleware',\n    'django.contrib.auth.middleware.AuthenticationMiddleware',\n    'django.contrib.messages.middleware.MessageMiddleware',\n    'django.middleware.clickjacking.XFrameOptionsMiddleware',\n]\nROOT_URLCONF = 'dalal_saudi.urls'",
        "detail": "dalal_saudi.settings",
        "documentation": {}
    },
    {
        "label": "ROOT_URLCONF",
        "kind": 5,
        "importPath": "dalal_saudi.settings",
        "description": "dalal_saudi.settings",
        "peekOfCode": "ROOT_URLCONF = 'dalal_saudi.urls'\nTEMPLATES = [\n    {\n        'BACKEND': 'django.template.backends.django.DjangoTemplates',\n        'DIRS': [BASE_DIR / 'templates'],\n        'APP_DIRS': True,\n        'OPTIONS': {\n            'context_processors': [\n                'django.template.context_processors.debug',\n                'django.template.context_processors.request',",
        "detail": "dalal_saudi.settings",
        "documentation": {}
    },
    {
        "label": "TEMPLATES",
        "kind": 5,
        "importPath": "dalal_saudi.settings",
        "description": "dalal_saudi.settings",
        "peekOfCode": "TEMPLATES = [\n    {\n        'BACKEND': 'django.template.backends.django.DjangoTemplates',\n        'DIRS': [BASE_DIR / 'templates'],\n        'APP_DIRS': True,\n        'OPTIONS': {\n            'context_processors': [\n                'django.template.context_processors.debug',\n                'django.template.context_processors.request',\n                'django.contrib.auth.context_processors.auth',",
        "detail": "dalal_saudi.settings",
        "documentation": {}
    },
    {
        "label": "WSGI_APPLICATION",
        "kind": 5,
        "importPath": "dalal_saudi.settings",
        "description": "dalal_saudi.settings",
        "peekOfCode": "WSGI_APPLICATION = 'dalal_saudi.wsgi.application'\n# Database\nDATABASES = {\n    'default': {\n        'ENGINE': 'django.db.backends.sqlite3',\n        'NAME': BASE_DIR / 'db.sqlite3',\n    }\n}\n# Password validation\nAUTH_PASSWORD_VALIDATORS = [",
        "detail": "dalal_saudi.settings",
        "documentation": {}
    },
    {
        "label": "DATABASES",
        "kind": 5,
        "importPath": "dalal_saudi.settings",
        "description": "dalal_saudi.settings",
        "peekOfCode": "DATABASES = {\n    'default': {\n        'ENGINE': 'django.db.backends.sqlite3',\n        'NAME': BASE_DIR / 'db.sqlite3',\n    }\n}\n# Password validation\nAUTH_PASSWORD_VALIDATORS = [\n    {\n        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',",
        "detail": "dalal_saudi.settings",
        "documentation": {}
    },
    {
        "label": "AUTH_PASSWORD_VALIDATORS",
        "kind": 5,
        "importPath": "dalal_saudi.settings",
        "description": "dalal_saudi.settings",
        "peekOfCode": "AUTH_PASSWORD_VALIDATORS = [\n    {\n        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',\n    },",
        "detail": "dalal_saudi.settings",
        "documentation": {}
    },
    {
        "label": "LANGUAGE_CODE",
        "kind": 5,
        "importPath": "dalal_saudi.settings",
        "description": "dalal_saudi.settings",
        "peekOfCode": "LANGUAGE_CODE = 'ar'\nTIME_ZONE = 'Asia/Riyadh'\nUSE_I18N = True\nUSE_TZ = True\n# Static files (CSS, JavaScript, Images)\nSTATIC_URL = '/static/'\nSTATICFILES_DIRS = [BASE_DIR / 'static']\nSTATIC_ROOT = BASE_DIR / 'staticfiles'\n# Media files\nMEDIA_URL = '/media/'",
        "detail": "dalal_saudi.settings",
        "documentation": {}
    },
    {
        "label": "TIME_ZONE",
        "kind": 5,
        "importPath": "dalal_saudi.settings",
        "description": "dalal_saudi.settings",
        "peekOfCode": "TIME_ZONE = 'Asia/Riyadh'\nUSE_I18N = True\nUSE_TZ = True\n# Static files (CSS, JavaScript, Images)\nSTATIC_URL = '/static/'\nSTATICFILES_DIRS = [BASE_DIR / 'static']\nSTATIC_ROOT = BASE_DIR / 'staticfiles'\n# Media files\nMEDIA_URL = '/media/'\nMEDIA_ROOT = BASE_DIR / 'media'",
        "detail": "dalal_saudi.settings",
        "documentation": {}
    },
    {
        "label": "USE_I18N",
        "kind": 5,
        "importPath": "dalal_saudi.settings",
        "description": "dalal_saudi.settings",
        "peekOfCode": "USE_I18N = True\nUSE_TZ = True\n# Static files (CSS, JavaScript, Images)\nSTATIC_URL = '/static/'\nSTATICFILES_DIRS = [BASE_DIR / 'static']\nSTATIC_ROOT = BASE_DIR / 'staticfiles'\n# Media files\nMEDIA_URL = '/media/'\nMEDIA_ROOT = BASE_DIR / 'media'\n# Default primary key field type",
        "detail": "dalal_saudi.settings",
        "documentation": {}
    },
    {
        "label": "USE_TZ",
        "kind": 5,
        "importPath": "dalal_saudi.settings",
        "description": "dalal_saudi.settings",
        "peekOfCode": "USE_TZ = True\n# Static files (CSS, JavaScript, Images)\nSTATIC_URL = '/static/'\nSTATICFILES_DIRS = [BASE_DIR / 'static']\nSTATIC_ROOT = BASE_DIR / 'staticfiles'\n# Media files\nMEDIA_URL = '/media/'\nMEDIA_ROOT = BASE_DIR / 'media'\n# Default primary key field type\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'",
        "detail": "dalal_saudi.settings",
        "documentation": {}
    },
    {
        "label": "STATIC_URL",
        "kind": 5,
        "importPath": "dalal_saudi.settings",
        "description": "dalal_saudi.settings",
        "peekOfCode": "STATIC_URL = '/static/'\nSTATICFILES_DIRS = [BASE_DIR / 'static']\nSTATIC_ROOT = BASE_DIR / 'staticfiles'\n# Media files\nMEDIA_URL = '/media/'\nMEDIA_ROOT = BASE_DIR / 'media'\n# Default primary key field type\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'\n# Custom user model\nAUTH_USER_MODEL = 'users.User'",
        "detail": "dalal_saudi.settings",
        "documentation": {}
    },
    {
        "label": "STATICFILES_DIRS",
        "kind": 5,
        "importPath": "dalal_saudi.settings",
        "description": "dalal_saudi.settings",
        "peekOfCode": "STATICFILES_DIRS = [BASE_DIR / 'static']\nSTATIC_ROOT = BASE_DIR / 'staticfiles'\n# Media files\nMEDIA_URL = '/media/'\nMEDIA_ROOT = BASE_DIR / 'media'\n# Default primary key field type\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'\n# Custom user model\nAUTH_USER_MODEL = 'users.User'\n# Login/Logout URLs",
        "detail": "dalal_saudi.settings",
        "documentation": {}
    },
    {
        "label": "STATIC_ROOT",
        "kind": 5,
        "importPath": "dalal_saudi.settings",
        "description": "dalal_saudi.settings",
        "peekOfCode": "STATIC_ROOT = BASE_DIR / 'staticfiles'\n# Media files\nMEDIA_URL = '/media/'\nMEDIA_ROOT = BASE_DIR / 'media'\n# Default primary key field type\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'\n# Custom user model\nAUTH_USER_MODEL = 'users.User'\n# Login/Logout URLs\nLOGIN_URL = '/users/login/'",
        "detail": "dalal_saudi.settings",
        "documentation": {}
    },
    {
        "label": "MEDIA_URL",
        "kind": 5,
        "importPath": "dalal_saudi.settings",
        "description": "dalal_saudi.settings",
        "peekOfCode": "MEDIA_URL = '/media/'\nMEDIA_ROOT = BASE_DIR / 'media'\n# Default primary key field type\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'\n# Custom user model\nAUTH_USER_MODEL = 'users.User'\n# Login/Logout URLs\nLOGIN_URL = '/users/login/'\nLOGIN_REDIRECT_URL = '/'\nLOGOUT_REDIRECT_URL = '/'",
        "detail": "dalal_saudi.settings",
        "documentation": {}
    },
    {
        "label": "MEDIA_ROOT",
        "kind": 5,
        "importPath": "dalal_saudi.settings",
        "description": "dalal_saudi.settings",
        "peekOfCode": "MEDIA_ROOT = BASE_DIR / 'media'\n# Default primary key field type\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'\n# Custom user model\nAUTH_USER_MODEL = 'users.User'\n# Login/Logout URLs\nLOGIN_URL = '/users/login/'\nLOGIN_REDIRECT_URL = '/'\nLOGOUT_REDIRECT_URL = '/'",
        "detail": "dalal_saudi.settings",
        "documentation": {}
    },
    {
        "label": "DEFAULT_AUTO_FIELD",
        "kind": 5,
        "importPath": "dalal_saudi.settings",
        "description": "dalal_saudi.settings",
        "peekOfCode": "DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'\n# Custom user model\nAUTH_USER_MODEL = 'users.User'\n# Login/Logout URLs\nLOGIN_URL = '/users/login/'\nLOGIN_REDIRECT_URL = '/'\nLOGOUT_REDIRECT_URL = '/'",
        "detail": "dalal_saudi.settings",
        "documentation": {}
    },
    {
        "label": "AUTH_USER_MODEL",
        "kind": 5,
        "importPath": "dalal_saudi.settings",
        "description": "dalal_saudi.settings",
        "peekOfCode": "AUTH_USER_MODEL = 'users.User'\n# Login/Logout URLs\nLOGIN_URL = '/users/login/'\nLOGIN_REDIRECT_URL = '/'\nLOGOUT_REDIRECT_URL = '/'",
        "detail": "dalal_saudi.settings",
        "documentation": {}
    },
    {
        "label": "LOGIN_URL",
        "kind": 5,
        "importPath": "dalal_saudi.settings",
        "description": "dalal_saudi.settings",
        "peekOfCode": "LOGIN_URL = '/users/login/'\nLOGIN_REDIRECT_URL = '/'\nLOGOUT_REDIRECT_URL = '/'",
        "detail": "dalal_saudi.settings",
        "documentation": {}
    },
    {
        "label": "LOGIN_REDIRECT_URL",
        "kind": 5,
        "importPath": "dalal_saudi.settings",
        "description": "dalal_saudi.settings",
        "peekOfCode": "LOGIN_REDIRECT_URL = '/'\nLOGOUT_REDIRECT_URL = '/'",
        "detail": "dalal_saudi.settings",
        "documentation": {}
    },
    {
        "label": "LOGOUT_REDIRECT_URL",
        "kind": 5,
        "importPath": "dalal_saudi.settings",
        "description": "dalal_saudi.settings",
        "peekOfCode": "LOGOUT_REDIRECT_URL = '/'",
        "detail": "dalal_saudi.settings",
        "documentation": {}
    },
    {
        "label": "urlpatterns",
        "kind": 5,
        "importPath": "dalal_saudi.urls",
        "description": "dalal_saudi.urls",
        "peekOfCode": "urlpatterns = [\n    path('admin/', admin_site.urls),\n    path('admin/mark-messages-read/', mark_messages_read_admin, name='admin_mark_messages_read'),\n    path('', views.home_view, name='home'),\n    path('users/', include('users.urls', namespace='users')),\n    path('products/', include('products.urls', namespace='products')),\n    path('categories/', include('categories.urls', namespace='categories')),\n    path('messaging/', include('messaging.urls', namespace='messaging')),\n    path('auctions/', include('auctions.urls', namespace='auctions')),\n    path('locations/', include('locations.urls', namespace='locations')),",
        "detail": "dalal_saudi.urls",
        "documentation": {}
    },
    {
        "label": "home_view",
        "kind": 2,
        "importPath": "dalal_saudi.views",
        "description": "dalal_saudi.views",
        "peekOfCode": "def home_view(request):\n    \"\"\"صفحة الرئيسية مع الإحصائيات والمنتجات المميزة\"\"\"\n    # المنتجات المميزة (آخر 8 منتجات معتمدة)\n    featured_products = Product.objects.filter(\n        status='active', \n        is_approved=True\n    ).select_related('seller', 'category').prefetch_related('images')[:8]\n    # الإحصائيات\n    total_products = Product.objects.filter(status='active', is_approved=True).count()\n    total_users = User.objects.count()",
        "detail": "dalal_saudi.views",
        "documentation": {}
    },
    {
        "label": "User",
        "kind": 5,
        "importPath": "dalal_saudi.views",
        "description": "dalal_saudi.views",
        "peekOfCode": "User = get_user_model()\ndef home_view(request):\n    \"\"\"صفحة الرئيسية مع الإحصائيات والمنتجات المميزة\"\"\"\n    # المنتجات المميزة (آخر 8 منتجات معتمدة)\n    featured_products = Product.objects.filter(\n        status='active', \n        is_approved=True\n    ).select_related('seller', 'category').prefetch_related('images')[:8]\n    # الإحصائيات\n    total_products = Product.objects.filter(status='active', is_approved=True).count()",
        "detail": "dalal_saudi.views",
        "documentation": {}
    },
    {
        "label": "application",
        "kind": 5,
        "importPath": "dalal_saudi.wsgi",
        "description": "dalal_saudi.wsgi",
        "peekOfCode": "application = get_wsgi_application()",
        "detail": "dalal_saudi.wsgi",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "locations.migrations.0001_initial",
        "description": "locations.migrations.0001_initial",
        "peekOfCode": "class Migration(migrations.Migration):\n    initial = True\n    dependencies = [\n    ]\n    operations = [\n        migrations.CreateModel(\n            name='Location',\n            fields=[\n                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),\n                ('name', models.CharField(max_length=100)),",
        "detail": "locations.migrations.0001_initial",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "locations.migrations.0002_initial",
        "description": "locations.migrations.0002_initial",
        "peekOfCode": "class Migration(migrations.Migration):\n    initial = True\n    dependencies = [\n        ('products', '0001_initial'),\n        migrations.swappable_dependency(settings.AUTH_USER_MODEL),\n        ('locations', '0001_initial'),\n    ]\n    operations = [\n        migrations.AddField(\n            model_name='savedlocation',",
        "detail": "locations.migrations.0002_initial",
        "documentation": {}
    },
    {
        "label": "LocationsConfig",
        "kind": 6,
        "importPath": "locations.apps",
        "description": "locations.apps",
        "peekOfCode": "class LocationsConfig(AppConfig):\n    default_auto_field = 'django.db.models.BigAutoField'\n    name = 'locations'",
        "detail": "locations.apps",
        "documentation": {}
    },
    {
        "label": "Location",
        "kind": 6,
        "importPath": "locations.models",
        "description": "locations.models",
        "peekOfCode": "class Location(models.Model):\n    name = models.CharField(max_length=100)\n    name_en = models.CharField(max_length=100, blank=True, null=True)\n    latitude = models.DecimalField(max_digits=9, decimal_places=6)\n    longitude = models.DecimalField(max_digits=9, decimal_places=6)\n    parent = models.ForeignKey('self', on_delete=models.CASCADE, blank=True, null=True, related_name='children')\n    level = models.CharField(max_length=20, choices=[\n        ('country', 'Country'),\n        ('region', 'Region'),\n        ('city', 'City'),",
        "detail": "locations.models",
        "documentation": {}
    },
    {
        "label": "ProductLocation",
        "kind": 6,
        "importPath": "locations.models",
        "description": "locations.models",
        "peekOfCode": "class ProductLocation(models.Model):\n    product = models.OneToOneField(Product, on_delete=models.CASCADE, related_name='location_details')\n    location = models.ForeignKey(Location, on_delete=models.CASCADE, related_name='products')\n    address = models.CharField(max_length=255, blank=True, null=True)\n    landmark = models.CharField(max_length=100, blank=True, null=True)\n    postal_code = models.CharField(max_length=10, blank=True, null=True)\n    is_exact_location = models.BooleanField(default=False)  # True if exact coordinates, False if approximate\n    def __str__(self):\n        return \"Location for {}\".format(self.product.title)\nclass SavedLocation(models.Model):",
        "detail": "locations.models",
        "documentation": {}
    },
    {
        "label": "SavedLocation",
        "kind": 6,
        "importPath": "locations.models",
        "description": "locations.models",
        "peekOfCode": "class SavedLocation(models.Model):\n    user = models.ForeignKey(User, on_delete=models.CASCADE, related_name='saved_locations')\n    name = models.CharField(max_length=100)  # e.g., \"Home\", \"Work\", \"Shop\"\n    latitude = models.DecimalField(max_digits=9, decimal_places=6)\n    longitude = models.DecimalField(max_digits=9, decimal_places=6)\n    address = models.CharField(max_length=255)\n    is_default = models.BooleanField(default=False)\n    created_at = models.DateTimeField(auto_now_add=True)\n    class Meta:\n        ordering = ['-is_default', 'name']",
        "detail": "locations.models",
        "documentation": {}
    },
    {
        "label": "User",
        "kind": 5,
        "importPath": "locations.models",
        "description": "locations.models",
        "peekOfCode": "User = get_user_model()\nclass Location(models.Model):\n    name = models.CharField(max_length=100)\n    name_en = models.CharField(max_length=100, blank=True, null=True)\n    latitude = models.DecimalField(max_digits=9, decimal_places=6)\n    longitude = models.DecimalField(max_digits=9, decimal_places=6)\n    parent = models.ForeignKey('self', on_delete=models.CASCADE, blank=True, null=True, related_name='children')\n    level = models.CharField(max_length=20, choices=[\n        ('country', 'Country'),\n        ('region', 'Region'),",
        "detail": "locations.models",
        "documentation": {}
    },
    {
        "label": "app_name",
        "kind": 5,
        "importPath": "locations.urls",
        "description": "locations.urls",
        "peekOfCode": "app_name = 'locations'\nurlpatterns = [\n    path('api/locations/', views.get_locations_api, name='locations_api'),\n    path('api/search/', views.search_locations, name='search_locations'),\n    path('save/', views.save_location, name='save_location'),\n    path('my-locations/', views.my_locations, name='my_locations'),\n    path('delete/<int:location_id>/', views.delete_saved_location, name='delete_location'),\n    path('map/product/<int:product_id>/', views.product_map_view, name='product_map'),\n    path('map/area/', views.area_products_map, name='area_map'),\n]",
        "detail": "locations.urls",
        "documentation": {}
    },
    {
        "label": "urlpatterns",
        "kind": 5,
        "importPath": "locations.urls",
        "description": "locations.urls",
        "peekOfCode": "urlpatterns = [\n    path('api/locations/', views.get_locations_api, name='locations_api'),\n    path('api/search/', views.search_locations, name='search_locations'),\n    path('save/', views.save_location, name='save_location'),\n    path('my-locations/', views.my_locations, name='my_locations'),\n    path('delete/<int:location_id>/', views.delete_saved_location, name='delete_location'),\n    path('map/product/<int:product_id>/', views.product_map_view, name='product_map'),\n    path('map/area/', views.area_products_map, name='area_map'),\n]",
        "detail": "locations.urls",
        "documentation": {}
    },
    {
        "label": "get_locations_api",
        "kind": 2,
        "importPath": "locations.views",
        "description": "locations.views",
        "peekOfCode": "def get_locations_api(request):\n    \"\"\"API endpoint to get locations for AJAX requests\"\"\"\n    parent_id = request.GET.get('parent_id')\n    level = request.GET.get('level')\n    locations = Location.objects.filter(is_active=True)\n    if parent_id:\n        locations = locations.filter(parent_id=parent_id)\n    elif level:\n        locations = locations.filter(level=level)\n    locations_data = [",
        "detail": "locations.views",
        "documentation": {}
    },
    {
        "label": "search_locations",
        "kind": 2,
        "importPath": "locations.views",
        "description": "locations.views",
        "peekOfCode": "def search_locations(request):\n    \"\"\"Search locations by name\"\"\"\n    query = request.GET.get('q', '')\n    if len(query) < 2:\n        return JsonResponse({'locations': []})\n    locations = Location.objects.filter(\n        Q(name__icontains=query) | Q(name_en__icontains=query),\n        is_active=True\n    )[:10]\n    locations_data = [",
        "detail": "locations.views",
        "documentation": {}
    },
    {
        "label": "save_location",
        "kind": 2,
        "importPath": "locations.views",
        "description": "locations.views",
        "peekOfCode": "def save_location(request):\n    \"\"\"Save a location for the user\"\"\"\n    if request.method == 'POST':\n        try:\n            data = json.loads(request.body)\n            # If setting as default, remove default from other locations\n            if data.get('is_default'):\n                SavedLocation.objects.filter(\n                    user=request.user, \n                    is_default=True",
        "detail": "locations.views",
        "documentation": {}
    },
    {
        "label": "my_locations",
        "kind": 2,
        "importPath": "locations.views",
        "description": "locations.views",
        "peekOfCode": "def my_locations(request):\n    \"\"\"Display user's saved locations\"\"\"\n    saved_locations = SavedLocation.objects.filter(user=request.user)\n    return render(request, 'locations/my_locations.html', {\n        'saved_locations': saved_locations\n    })\n@login_required\ndef delete_saved_location(request, location_id):\n    \"\"\"Delete a saved location\"\"\"\n    location = get_object_or_404(SavedLocation, id=location_id, user=request.user)",
        "detail": "locations.views",
        "documentation": {}
    },
    {
        "label": "delete_saved_location",
        "kind": 2,
        "importPath": "locations.views",
        "description": "locations.views",
        "peekOfCode": "def delete_saved_location(request, location_id):\n    \"\"\"Delete a saved location\"\"\"\n    location = get_object_or_404(SavedLocation, id=location_id, user=request.user)\n    if request.method == 'POST':\n        location.delete()\n        messages.success(request, 'تم حذف الموقع بنجاح')\n        return redirect('locations:my_locations')\n    return render(request, 'locations/delete_location.html', {\n        'location': location\n    })",
        "detail": "locations.views",
        "documentation": {}
    },
    {
        "label": "product_map_view",
        "kind": 2,
        "importPath": "locations.views",
        "description": "locations.views",
        "peekOfCode": "def product_map_view(request, product_id):\n    \"\"\"Display product location on map\"\"\"\n    product = get_object_or_404(Product, id=product_id)\n    # Get product location details\n    location_details = None\n    if hasattr(product, 'location_details'):\n        location_details = product.location_details\n    # Get nearby products (within 10km radius approximately)\n    nearby_products = []\n    if product.location_latitude and product.location_longitude:",
        "detail": "locations.views",
        "documentation": {}
    },
    {
        "label": "area_products_map",
        "kind": 2,
        "importPath": "locations.views",
        "description": "locations.views",
        "peekOfCode": "def area_products_map(request):\n    \"\"\"Display all products in a specific area on map\"\"\"\n    # Get filter parameters\n    location_id = request.GET.get('location')\n    category_id = request.GET.get('category')\n    min_price = request.GET.get('min_price')\n    max_price = request.GET.get('max_price')\n    # Base query\n    products = Product.objects.filter(\n        is_approved=True,",
        "detail": "locations.views",
        "documentation": {}
    },
    {
        "label": "Command",
        "kind": 6,
        "importPath": "messaging.management.commands.fix_conversations",
        "description": "messaging.management.commands.fix_conversations",
        "peekOfCode": "class Command(BaseCommand):\n    help = 'إصلاح المحادثات الموجودة وربطها بالرسائل'\n    def handle(self, *args, **options):\n        # إنشاء محادثات للرسائل التي لا تحتوي على محادثة\n        messages_without_conversation = Message.objects.filter(conversation__isnull=True)\n        self.stdout.write(\n            self.style.WARNING(\n                'العثور على {} رسالة بدون محادثة'.format(messages_without_conversation.count())\n            )\n        )",
        "detail": "messaging.management.commands.fix_conversations",
        "documentation": {}
    },
    {
        "label": "User",
        "kind": 5,
        "importPath": "messaging.management.commands.fix_conversations",
        "description": "messaging.management.commands.fix_conversations",
        "peekOfCode": "User = get_user_model()\nclass Command(BaseCommand):\n    help = 'إصلاح المحادثات الموجودة وربطها بالرسائل'\n    def handle(self, *args, **options):\n        # إنشاء محادثات للرسائل التي لا تحتوي على محادثة\n        messages_without_conversation = Message.objects.filter(conversation__isnull=True)\n        self.stdout.write(\n            self.style.WARNING(\n                'العثور على {} رسالة بدون محادثة'.format(messages_without_conversation.count())\n            )",
        "detail": "messaging.management.commands.fix_conversations",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "messaging.migrations.0001_initial",
        "description": "messaging.migrations.0001_initial",
        "peekOfCode": "class Migration(migrations.Migration):\n    initial = True\n    dependencies = [\n    ]\n    operations = [\n        migrations.CreateModel(\n            name='Conversation',\n            fields=[\n                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),\n                ('created_at', models.DateTimeField(auto_now_add=True)),",
        "detail": "messaging.migrations.0001_initial",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "messaging.migrations.0002_initial",
        "description": "messaging.migrations.0002_initial",
        "peekOfCode": "class Migration(migrations.Migration):\n    initial = True\n    dependencies = [\n        ('products', '0001_initial'),\n        ('messaging', '0001_initial'),\n    ]\n    operations = [\n        migrations.AddField(\n            model_name='message',\n            name='product',",
        "detail": "messaging.migrations.0002_initial",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "messaging.migrations.0003_initial",
        "description": "messaging.migrations.0003_initial",
        "peekOfCode": "class Migration(migrations.Migration):\n    initial = True\n    dependencies = [\n        ('products', '0001_initial'),\n        migrations.swappable_dependency(settings.AUTH_USER_MODEL),\n        ('messaging', '0002_initial'),\n    ]\n    operations = [\n        migrations.AddField(\n            model_name='message',",
        "detail": "messaging.migrations.0003_initial",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "messaging.migrations.0004_message_conversation",
        "description": "messaging.migrations.0004_message_conversation",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('messaging', '0003_initial'),\n    ]\n    operations = [\n        migrations.AddField(\n            model_name='message',\n            name='conversation',\n            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='messages', to='messaging.conversation'),\n        ),",
        "detail": "messaging.migrations.0004_message_conversation",
        "documentation": {}
    },
    {
        "label": "MessageAdmin",
        "kind": 6,
        "importPath": "messaging.admin",
        "description": "messaging.admin",
        "peekOfCode": "class MessageAdmin(admin.ModelAdmin):\n    list_display = [\n        'id', 'sender_info', 'receiver_info', 'product_link', \n        'content_preview', 'timestamp', 'is_read_status'\n    ]\n    list_filter = [\n        'timestamp', 'is_read', 'product__category', \n        'sender__is_seller', 'receiver__is_seller'\n    ]\n    search_fields = [",
        "detail": "messaging.admin",
        "documentation": {}
    },
    {
        "label": "ConversationAdmin",
        "kind": 6,
        "importPath": "messaging.admin",
        "description": "messaging.admin",
        "peekOfCode": "class ConversationAdmin(admin.ModelAdmin):\n    list_display = [\n        'conversation_id', 'product_preview', 'participants_summary', \n        'messages_stats', 'conversation_status', 'last_activity', 'created_at'\n    ]\n    list_filter = [\n        'created_at', 'updated_at', 'product__category',\n        'product__status', 'product__seller__is_seller'\n    ]\n    search_fields = [",
        "detail": "messaging.admin",
        "documentation": {}
    },
    {
        "label": "MessagingConfig",
        "kind": 6,
        "importPath": "messaging.apps",
        "description": "messaging.apps",
        "peekOfCode": "class MessagingConfig(AppConfig):\n    default_auto_field = 'django.db.models.BigAutoField'\n    name = 'messaging'\n    verbose_name = 'المحادثات والرسائل'\n    def ready(self):\n        import messaging.admin",
        "detail": "messaging.apps",
        "documentation": {}
    },
    {
        "label": "Message",
        "kind": 6,
        "importPath": "messaging.models",
        "description": "messaging.models",
        "peekOfCode": "class Message(models.Model):\n    conversation = models.ForeignKey('Conversation', on_delete=models.CASCADE, related_name='messages', null=True, blank=True)\n    sender = models.ForeignKey(User, on_delete=models.CASCADE, related_name='sent_messages')\n    receiver = models.ForeignKey(User, on_delete=models.CASCADE, related_name='received_messages')\n    product = models.ForeignKey(Product, on_delete=models.CASCADE, blank=True, null=True, related_name='messages')\n    content = models.TextField()\n    timestamp = models.DateTimeField(auto_now_add=True)\n    is_read = models.BooleanField(default=False)\n    class Meta:\n        ordering = ['-timestamp']",
        "detail": "messaging.models",
        "documentation": {}
    },
    {
        "label": "Conversation",
        "kind": 6,
        "importPath": "messaging.models",
        "description": "messaging.models",
        "peekOfCode": "class Conversation(models.Model):\n    participants = models.ManyToManyField(User, related_name='conversations')\n    product = models.ForeignKey(Product, on_delete=models.CASCADE, blank=True, null=True)\n    created_at = models.DateTimeField(auto_now_add=True)\n    updated_at = models.DateTimeField(auto_now=True)\n    def __str__(self):\n        return \"Conversation about {}\".format(self.product.title if self.product else 'General')",
        "detail": "messaging.models",
        "documentation": {}
    },
    {
        "label": "User",
        "kind": 5,
        "importPath": "messaging.models",
        "description": "messaging.models",
        "peekOfCode": "User = get_user_model()\nclass Message(models.Model):\n    conversation = models.ForeignKey('Conversation', on_delete=models.CASCADE, related_name='messages', null=True, blank=True)\n    sender = models.ForeignKey(User, on_delete=models.CASCADE, related_name='sent_messages')\n    receiver = models.ForeignKey(User, on_delete=models.CASCADE, related_name='received_messages')\n    product = models.ForeignKey(Product, on_delete=models.CASCADE, blank=True, null=True, related_name='messages')\n    content = models.TextField()\n    timestamp = models.DateTimeField(auto_now_add=True)\n    is_read = models.BooleanField(default=False)\n    class Meta:",
        "detail": "messaging.models",
        "documentation": {}
    },
    {
        "label": "app_name",
        "kind": 5,
        "importPath": "messaging.urls",
        "description": "messaging.urls",
        "peekOfCode": "app_name = 'messaging'\nurlpatterns = [\n    path('', views.conversations_list, name='conversations_list'),\n    path('inbox/', views.inbox, name='inbox'),\n    path('conversation/<int:conversation_id>/', views.conversation_detail, name='conversation_detail'),\n    path('start/<int:product_id>/', views.start_conversation, name='start_conversation'),\n    path('send-ajax/', views.send_message_ajax, name='send_message_ajax'),\n    path('send-message/', views.send_message, name='send_message'),\n    path('mark-as-read/', views.mark_as_read, name='mark_as_read'),\n    path('admin/mark-messages-read/', views.mark_messages_read_admin, name='mark_messages_read_admin'),",
        "detail": "messaging.urls",
        "documentation": {}
    },
    {
        "label": "urlpatterns",
        "kind": 5,
        "importPath": "messaging.urls",
        "description": "messaging.urls",
        "peekOfCode": "urlpatterns = [\n    path('', views.conversations_list, name='conversations_list'),\n    path('inbox/', views.inbox, name='inbox'),\n    path('conversation/<int:conversation_id>/', views.conversation_detail, name='conversation_detail'),\n    path('start/<int:product_id>/', views.start_conversation, name='start_conversation'),\n    path('send-ajax/', views.send_message_ajax, name='send_message_ajax'),\n    path('send-message/', views.send_message, name='send_message'),\n    path('mark-as-read/', views.mark_as_read, name='mark_as_read'),\n    path('admin/mark-messages-read/', views.mark_messages_read_admin, name='mark_messages_read_admin'),\n]",
        "detail": "messaging.urls",
        "documentation": {}
    },
    {
        "label": "conversations_list",
        "kind": 2,
        "importPath": "messaging.views",
        "description": "messaging.views",
        "peekOfCode": "def conversations_list(request):\n    \"\"\"عرض قائمة المحادثات للمستخدم\"\"\"\n    conversations = Conversation.objects.filter(\n        participants=request.user\n    ).order_by('-updated_at')\n    return render(request, 'messaging/conversations_list.html', {\n        'conversations': conversations\n    })\n@login_required\ndef inbox(request):",
        "detail": "messaging.views",
        "documentation": {}
    },
    {
        "label": "inbox",
        "kind": 2,
        "importPath": "messaging.views",
        "description": "messaging.views",
        "peekOfCode": "def inbox(request):\n    \"\"\"عرض صندوق الوارد للمستخدم\"\"\"\n    conversations = Conversation.objects.filter(\n        participants=request.user\n    ).order_by('-updated_at')\n    return render(request, 'messaging/inbox.html', {\n        'conversations': conversations\n    })\n@login_required\ndef conversation_detail(request, conversation_id):",
        "detail": "messaging.views",
        "documentation": {}
    },
    {
        "label": "conversation_detail",
        "kind": 2,
        "importPath": "messaging.views",
        "description": "messaging.views",
        "peekOfCode": "def conversation_detail(request, conversation_id):\n    \"\"\"عرض تفاصيل المحادثة\"\"\"\n    conversation = get_object_or_404(\n        Conversation, \n        id=conversation_id, \n        participants=request.user\n    )\n    # تحديد الرسائل كمقروءة\n    Message.objects.filter(\n        conversation=conversation,",
        "detail": "messaging.views",
        "documentation": {}
    },
    {
        "label": "start_conversation",
        "kind": 2,
        "importPath": "messaging.views",
        "description": "messaging.views",
        "peekOfCode": "def start_conversation(request, product_id):\n    \"\"\"بدء محادثة جديدة حول منتج\"\"\"\n    product = get_object_or_404(Product, id=product_id)\n    if product.seller == request.user:\n        messages.error(request, 'لا يمكنك بدء محادثة مع نفسك')\n        return redirect('products:detail', product_id=product.id)\n    # البحث عن محادثة موجودة\n    conversation = Conversation.objects.filter(\n        participants=request.user,\n        product=product",
        "detail": "messaging.views",
        "documentation": {}
    },
    {
        "label": "send_message",
        "kind": 2,
        "importPath": "messaging.views",
        "description": "messaging.views",
        "peekOfCode": "def send_message(request):\n    \"\"\"إرسال رسالة\"\"\"\n    if request.method == 'POST':\n        conversation_id = request.POST.get('conversation_id')\n        content = request.POST.get('content')\n        try:\n            conversation = Conversation.objects.get(id=conversation_id, participants=request.user)\n            other_participant = conversation.participants.exclude(id=request.user.id).first()\n            Message.objects.create(\n                conversation=conversation,",
        "detail": "messaging.views",
        "documentation": {}
    },
    {
        "label": "send_message_ajax",
        "kind": 2,
        "importPath": "messaging.views",
        "description": "messaging.views",
        "peekOfCode": "def send_message_ajax(request):\n    \"\"\"إرسال رسالة عبر AJAX\"\"\"\n    if request.method == 'POST':\n        conversation_id = request.POST.get('conversation_id')\n        receiver_id = request.POST.get('receiver_id')\n        content = request.POST.get('content')\n        try:\n            conversation = Conversation.objects.get(id=conversation_id, participants=request.user)\n            receiver = User.objects.get(id=receiver_id)\n            message = Message.objects.create(",
        "detail": "messaging.views",
        "documentation": {}
    },
    {
        "label": "mark_as_read",
        "kind": 2,
        "importPath": "messaging.views",
        "description": "messaging.views",
        "peekOfCode": "def mark_as_read(request):\n    \"\"\"تحديد الرسائل كمقروءة\"\"\"\n    if request.method == 'POST':\n        conversation_id = request.POST.get('conversation_id')\n        try:\n            conversation = Conversation.objects.get(id=conversation_id, participants=request.user)\n            Message.objects.filter(\n                conversation=conversation,\n                receiver=request.user,\n                is_read=False",
        "detail": "messaging.views",
        "documentation": {}
    },
    {
        "label": "mark_messages_read_admin",
        "kind": 2,
        "importPath": "messaging.views",
        "description": "messaging.views",
        "peekOfCode": "def mark_messages_read_admin(request):\n    \"\"\"تحديد جميع رسائل المحادثة كمقروءة من admin panel\"\"\"\n    try:\n        data = json.loads(request.body)\n        conversation_id = data.get('conversation_id')\n        if not conversation_id:\n            return JsonResponse({'success': False, 'error': 'معرف المحادثة مطلوب'})\n        # التحقق من وجود المحادثة\n        try:\n            conversation = Conversation.objects.get(pk=conversation_id)",
        "detail": "messaging.views",
        "documentation": {}
    },
    {
        "label": "User",
        "kind": 5,
        "importPath": "messaging.views",
        "description": "messaging.views",
        "peekOfCode": "User = get_user_model()\n@login_required\ndef conversations_list(request):\n    \"\"\"عرض قائمة المحادثات للمستخدم\"\"\"\n    conversations = Conversation.objects.filter(\n        participants=request.user\n    ).order_by('-updated_at')\n    return render(request, 'messaging/conversations_list.html', {\n        'conversations': conversations\n    })",
        "detail": "messaging.views",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "orders.migrations.0001_initial",
        "description": "orders.migrations.0001_initial",
        "peekOfCode": "class Migration(migrations.Migration):\n    initial = True\n    dependencies = [\n    ]\n    operations = [\n        migrations.CreateModel(\n            name='Order',\n            fields=[\n                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),\n                ('order_date', models.DateTimeField(auto_now_add=True)),",
        "detail": "orders.migrations.0001_initial",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "orders.migrations.0002_initial",
        "description": "orders.migrations.0002_initial",
        "peekOfCode": "class Migration(migrations.Migration):\n    initial = True\n    dependencies = [\n        ('products', '0001_initial'),\n        migrations.swappable_dependency(settings.AUTH_USER_MODEL),\n        ('orders', '0001_initial'),\n    ]\n    operations = [\n        migrations.AddField(\n            model_name='order',",
        "detail": "orders.migrations.0002_initial",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "orders.migrations.0003_order_seller_alter_order_buyer",
        "description": "orders.migrations.0003_order_seller_alter_order_buyer",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('orders', '0002_initial'),\n        migrations.swappable_dependency(settings.AUTH_USER_MODEL),\n    ]\n    operations = [\n        migrations.AddField(\n            model_name='order',\n            name='seller',\n            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='seller_orders', to=settings.AUTH_USER_MODEL),",
        "detail": "orders.migrations.0003_order_seller_alter_order_buyer",
        "documentation": {}
    },
    {
        "label": "OrderAdmin",
        "kind": 6,
        "importPath": "orders.admin",
        "description": "orders.admin",
        "peekOfCode": "class OrderAdmin(admin.ModelAdmin):\n    list_display = [\n        'id', 'product_info', 'buyer_info', 'seller_info', \n        'total_amount_formatted', 'status_badge', 'order_date'\n    ]\n    list_filter = [\n        'status', 'order_date', 'product__category',\n        'buyer__is_seller', 'seller__is_seller'\n    ]\n    search_fields = [",
        "detail": "orders.admin",
        "documentation": {}
    },
    {
        "label": "OrdersConfig",
        "kind": 6,
        "importPath": "orders.apps",
        "description": "orders.apps",
        "peekOfCode": "class OrdersConfig(AppConfig):\n    default_auto_field = 'django.db.models.BigAutoField'\n    name = 'orders'\n    verbose_name = 'الطلبات'\n    def ready(self):\n        import orders.admin",
        "detail": "orders.apps",
        "documentation": {}
    },
    {
        "label": "Order",
        "kind": 6,
        "importPath": "orders.models",
        "description": "orders.models",
        "peekOfCode": "class Order(models.Model):\n    STATUS_CHOICES = [\n        ('pending', 'Pending'),\n        ('confirmed', 'Confirmed'),\n        ('completed', 'Completed'),\n        ('cancelled', 'Cancelled'),\n    ]\n    product = models.ForeignKey(Product, on_delete=models.CASCADE, related_name='orders')\n    buyer = models.ForeignKey(User, on_delete=models.CASCADE, related_name='buyer_orders')\n    seller = models.ForeignKey(User, on_delete=models.CASCADE, related_name='seller_orders', null=True, blank=True)",
        "detail": "orders.models",
        "documentation": {}
    },
    {
        "label": "User",
        "kind": 5,
        "importPath": "orders.models",
        "description": "orders.models",
        "peekOfCode": "User = get_user_model()\nclass Order(models.Model):\n    STATUS_CHOICES = [\n        ('pending', 'Pending'),\n        ('confirmed', 'Confirmed'),\n        ('completed', 'Completed'),\n        ('cancelled', 'Cancelled'),\n    ]\n    product = models.ForeignKey(Product, on_delete=models.CASCADE, related_name='orders')\n    buyer = models.ForeignKey(User, on_delete=models.CASCADE, related_name='buyer_orders')",
        "detail": "orders.models",
        "documentation": {}
    },
    {
        "label": "app_name",
        "kind": 5,
        "importPath": "orders.urls",
        "description": "orders.urls",
        "peekOfCode": "app_name = 'orders'\nurlpatterns = [\n    path('my-orders/', views.my_orders, name='my_orders'),\n    path('<int:order_id>/', views.order_detail, name='detail'),\n    path('create/<int:product_id>/', views.create_order, name='create'),\n    path('update-status/<int:order_id>/', views.update_order_status, name='update_status'),\n    path('cancel/<int:order_id>/', views.cancel_order, name='cancel'),\n    path('history/', views.order_history, name='history'),\n]",
        "detail": "orders.urls",
        "documentation": {}
    },
    {
        "label": "urlpatterns",
        "kind": 5,
        "importPath": "orders.urls",
        "description": "orders.urls",
        "peekOfCode": "urlpatterns = [\n    path('my-orders/', views.my_orders, name='my_orders'),\n    path('<int:order_id>/', views.order_detail, name='detail'),\n    path('create/<int:product_id>/', views.create_order, name='create'),\n    path('update-status/<int:order_id>/', views.update_order_status, name='update_status'),\n    path('cancel/<int:order_id>/', views.cancel_order, name='cancel'),\n    path('history/', views.order_history, name='history'),\n]",
        "detail": "orders.urls",
        "documentation": {}
    },
    {
        "label": "create_order",
        "kind": 2,
        "importPath": "orders.views",
        "description": "orders.views",
        "peekOfCode": "def create_order(request, product_id):\n    \"\"\"إنشاء طلب جديد\"\"\"\n    product = get_object_or_404(Product, id=product_id)\n    # التحقق من أن المنتج متاح\n    if product.status != 'active' or not product.is_approved:\n        messages.error(request, 'هذا المنتج غير متاح حالياً')\n        return redirect('products:detail', pk=product.id)\n    # التحقق من أن المستخدم ليس صاحب المنتج\n    if product.seller == request.user:\n        messages.error(request, 'لا يمكنك طلب منتجك')",
        "detail": "orders.views",
        "documentation": {}
    },
    {
        "label": "order_detail",
        "kind": 2,
        "importPath": "orders.views",
        "description": "orders.views",
        "peekOfCode": "def order_detail(request, order_id):\n    \"\"\"عرض تفاصيل الطلب\"\"\"\n    order = Order.objects.filter(\n        Q(buyer=request.user) | Q(seller=request.user),\n        id=order_id\n    ).first()\n    if not order:\n        messages.error(request, 'الطلب غير موجود')\n        return redirect('orders:my_orders')\n    return render(request, 'orders/detail.html', {'order': order})",
        "detail": "orders.views",
        "documentation": {}
    },
    {
        "label": "my_orders",
        "kind": 2,
        "importPath": "orders.views",
        "description": "orders.views",
        "peekOfCode": "def my_orders(request):\n    \"\"\"عرض طلبات المستخدم\"\"\"\n    # الطلبات التي قام بها المستخدم كمشتري\n    buying_orders = Order.objects.filter(buyer=request.user).order_by('-order_date')\n    # الطلبات التي استقبلها المستخدم كبائع\n    selling_orders = Order.objects.filter(seller=request.user).order_by('-order_date')\n    # حساب الإحصائيات\n    all_orders = Order.objects.filter(Q(buyer=request.user) | Q(seller=request.user))\n    total_orders = all_orders.count()\n    pending_orders = all_orders.filter(status='pending').count()",
        "detail": "orders.views",
        "documentation": {}
    },
    {
        "label": "update_order_status",
        "kind": 2,
        "importPath": "orders.views",
        "description": "orders.views",
        "peekOfCode": "def update_order_status(request, order_id):\n    \"\"\"تحديث حالة الطلب\"\"\"\n    order = get_object_or_404(Order, id=order_id, seller=request.user)\n    if request.method == 'POST':\n        new_status = request.POST.get('status')\n        valid_statuses = ['pending', 'confirmed', 'cancelled', 'completed']\n        if new_status in valid_statuses:\n            order.status = new_status\n            order.save()\n            messages.success(request, 'تم تحديث حالة الطلب بنجاح')",
        "detail": "orders.views",
        "documentation": {}
    },
    {
        "label": "cancel_order",
        "kind": 2,
        "importPath": "orders.views",
        "description": "orders.views",
        "peekOfCode": "def cancel_order(request, order_id):\n    \"\"\"إلغاء الطلب\"\"\"\n    order = get_object_or_404(Order, id=order_id, buyer=request.user)\n    # يمكن إلغاء الطلب فقط إذا كان في حالة pending أو confirmed\n    if order.status not in ['pending', 'confirmed']:\n        messages.error(request, 'لا يمكن إلغاء هذا الطلب')\n        return redirect('orders:detail', order_id=order.id)\n    if request.method == 'POST':\n        order.status = 'cancelled'\n        order.save()",
        "detail": "orders.views",
        "documentation": {}
    },
    {
        "label": "order_history",
        "kind": 2,
        "importPath": "orders.views",
        "description": "orders.views",
        "peekOfCode": "def order_history(request):\n    \"\"\"تاريخ الطلبات\"\"\"\n    # الطلبات المكتملة والملغية\n    completed_orders = Order.objects.filter(\n        Q(buyer=request.user) | Q(seller=request.user),\n        status__in=['completed', 'cancelled']\n    ).order_by('-order_date')\n    return render(request, 'orders/history.html', {\n        'orders': completed_orders\n    })",
        "detail": "orders.views",
        "documentation": {}
    },
    {
        "label": "Command",
        "kind": 6,
        "importPath": "products.management.commands.add_sample_data",
        "description": "products.management.commands.add_sample_data",
        "peekOfCode": "class Command(BaseCommand):\n    help = 'إضافة بيانات تجريبية للمحادثات والطلبات والتقييمات'\n    def handle(self, *args, **options):\n        # التأكد من وجود مستخدمين ومنتجات\n        users = User.objects.all()\n        products = Product.objects.filter(status='active', is_approved=True)\n        if users.count() < 2:\n            self.stdout.write(self.style.ERROR('يجب وجود مستخدمين على الأقل'))\n            return\n        if products.count() < 1:",
        "detail": "products.management.commands.add_sample_data",
        "documentation": {}
    },
    {
        "label": "User",
        "kind": 5,
        "importPath": "products.management.commands.add_sample_data",
        "description": "products.management.commands.add_sample_data",
        "peekOfCode": "User = get_user_model()\nclass Command(BaseCommand):\n    help = 'إضافة بيانات تجريبية للمحادثات والطلبات والتقييمات'\n    def handle(self, *args, **options):\n        # التأكد من وجود مستخدمين ومنتجات\n        users = User.objects.all()\n        products = Product.objects.filter(status='active', is_approved=True)\n        if users.count() < 2:\n            self.stdout.write(self.style.ERROR('يجب وجود مستخدمين على الأقل'))\n            return",
        "detail": "products.management.commands.add_sample_data",
        "documentation": {}
    },
    {
        "label": "Command",
        "kind": 6,
        "importPath": "products.management.commands.add_sample_products_with_locations",
        "description": "products.management.commands.add_sample_products_with_locations",
        "peekOfCode": "class Command(BaseCommand):\n    help = 'إضافة منتجات تجريبية مع إحداثيات جغرافية'\n    def handle(self, *args, **options):\n        # إنشاء مستخدم تجريبي إذا لم يكن موجوداً\n        user, created = User.objects.get_or_create(\n            username='demo_seller',\n            defaults={\n                'email': 'demo@example.com',\n                'first_name': 'أحمد',\n                'last_name': 'محمد',",
        "detail": "products.management.commands.add_sample_products_with_locations",
        "documentation": {}
    },
    {
        "label": "User",
        "kind": 5,
        "importPath": "products.management.commands.add_sample_products_with_locations",
        "description": "products.management.commands.add_sample_products_with_locations",
        "peekOfCode": "User = get_user_model()\nclass Command(BaseCommand):\n    help = 'إضافة منتجات تجريبية مع إحداثيات جغرافية'\n    def handle(self, *args, **options):\n        # إنشاء مستخدم تجريبي إذا لم يكن موجوداً\n        user, created = User.objects.get_or_create(\n            username='demo_seller',\n            defaults={\n                'email': 'demo@example.com',\n                'first_name': 'أحمد',",
        "detail": "products.management.commands.add_sample_products_with_locations",
        "documentation": {}
    },
    {
        "label": "Command",
        "kind": 6,
        "importPath": "products.management.commands.create_sample_data",
        "description": "products.management.commands.create_sample_data",
        "peekOfCode": "class Command(BaseCommand):\n    help = 'إنشاء بيانات تجريبية للموقع'\n    def add_arguments(self, parser):\n        parser.add_argument(\n            '--users',\n            type=int,\n            default=10,\n            help='عدد المستخدمين المراد إنشاؤهم'\n        )\n        parser.add_argument(",
        "detail": "products.management.commands.create_sample_data",
        "documentation": {}
    },
    {
        "label": "User",
        "kind": 5,
        "importPath": "products.management.commands.create_sample_data",
        "description": "products.management.commands.create_sample_data",
        "peekOfCode": "User = get_user_model()\nclass Command(BaseCommand):\n    help = 'إنشاء بيانات تجريبية للموقع'\n    def add_arguments(self, parser):\n        parser.add_argument(\n            '--users',\n            type=int,\n            default=10,\n            help='عدد المستخدمين المراد إنشاؤهم'\n        )",
        "detail": "products.management.commands.create_sample_data",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "products.migrations.0001_initial",
        "description": "products.migrations.0001_initial",
        "peekOfCode": "class Migration(migrations.Migration):\n    initial = True\n    dependencies = [\n        ('categories', '0001_initial'),\n    ]\n    operations = [\n        migrations.CreateModel(\n            name='Car',\n            fields=[\n                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),",
        "detail": "products.migrations.0001_initial",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "products.migrations.0002_initial",
        "description": "products.migrations.0002_initial",
        "peekOfCode": "class Migration(migrations.Migration):\n    initial = True\n    dependencies = [\n        ('products', '0001_initial'),\n        migrations.swappable_dependency(settings.AUTH_USER_MODEL),\n    ]\n    operations = [\n        migrations.AddField(\n            model_name='product',\n            name='seller',",
        "detail": "products.migrations.0002_initial",
        "documentation": {}
    },
    {
        "label": "StatusFilter",
        "kind": 6,
        "importPath": "products.admin",
        "description": "products.admin",
        "peekOfCode": "class StatusFilter(SimpleListFilter):\n    title = 'حالة المنتج'\n    parameter_name = 'status'\n    def lookups(self, request, model_admin):\n        return [\n            ('pending_approval', 'بانتظار الموافقة'),\n            ('active', 'نشط'),\n            ('sold', 'مباع'),\n            ('hidden', 'مخفي'),\n            ('cancelled', 'ملغي'),",
        "detail": "products.admin",
        "documentation": {}
    },
    {
        "label": "CategoryFilter",
        "kind": 6,
        "importPath": "products.admin",
        "description": "products.admin",
        "peekOfCode": "class CategoryFilter(SimpleListFilter):\n    title = 'الفئة'\n    parameter_name = 'category'\n    def lookups(self, request, model_admin):\n        from categories.models import Category\n        return [(cat.id, cat.name) for cat in Category.objects.all()]\n    def queryset(self, request, queryset):\n        if self.value():\n            return queryset.filter(category_id=self.value())\n        return queryset",
        "detail": "products.admin",
        "documentation": {}
    },
    {
        "label": "PriceRangeFilter",
        "kind": 6,
        "importPath": "products.admin",
        "description": "products.admin",
        "peekOfCode": "class PriceRangeFilter(SimpleListFilter):\n    title = 'نطاق السعر'\n    parameter_name = 'price_range'\n    def lookups(self, request, model_admin):\n        return [\n            ('0-1000', 'أقل من 1,000 ر.س'),\n            ('1000-5000', '1,000 - 5,000 ر.س'),\n            ('5000-20000', '5,000 - 20,000 ر.س'),\n            ('20000-50000', '20,000 - 50,000 ر.س'),\n            ('50000+', 'أكثر من 50,000 ر.س'),",
        "detail": "products.admin",
        "documentation": {}
    },
    {
        "label": "ProductImageInline",
        "kind": 6,
        "importPath": "products.admin",
        "description": "products.admin",
        "peekOfCode": "class ProductImageInline(admin.TabularInline):\n    model = ProductImage\n    extra = 3\n    fields = ('image', 'is_main', 'image_preview')\n    readonly_fields = ('image_preview',)\n    def image_preview(self, obj):\n        if obj.image:\n            return format_html(\n                '<img src=\"{}\" style=\"width: 100px; height: 100px; object-fit: cover; border-radius: 8px;\" />',\n                obj.image.url",
        "detail": "products.admin",
        "documentation": {}
    },
    {
        "label": "CarInline",
        "kind": 6,
        "importPath": "products.admin",
        "description": "products.admin",
        "peekOfCode": "class CarInline(admin.StackedInline):\n    model = Car\n    extra = 0\n    fields = (\n        ('make', 'model', 'year'),\n        ('mileage', 'color'),\n        ('transmission_type', 'fuel_type'),\n        'is_new'\n    )\n# Inline for Real Estate Details",
        "detail": "products.admin",
        "documentation": {}
    },
    {
        "label": "RealEstateInline",
        "kind": 6,
        "importPath": "products.admin",
        "description": "products.admin",
        "peekOfCode": "class RealEstateInline(admin.StackedInline):\n    model = RealEstate\n    extra = 0\n    fields = (\n        ('property_type', 'area_sqm'),\n        ('num_bedrooms', 'num_bathrooms'),\n        ('is_furnished', 'for_rent')\n    )\n# Inline for Hotel Details\nclass HotelBookingInline(admin.StackedInline):",
        "detail": "products.admin",
        "documentation": {}
    },
    {
        "label": "HotelBookingInline",
        "kind": 6,
        "importPath": "products.admin",
        "description": "products.admin",
        "peekOfCode": "class HotelBookingInline(admin.StackedInline):\n    model = HotelBooking\n    extra = 0\n    fields = (\n        'hotel_name',\n        ('room_type', 'num_guests'),\n        ('check_in_date', 'check_out_date')\n    )\ndef mark_as_sold(modeladmin, request, queryset):\n    \"\"\"تحديد المنتجات كمباعة\"\"\"",
        "detail": "products.admin",
        "documentation": {}
    },
    {
        "label": "ProductAdmin",
        "kind": 6,
        "importPath": "products.admin",
        "description": "products.admin",
        "peekOfCode": "class ProductAdmin(admin.ModelAdmin):\n    list_display = [\n        'product_preview', 'seller_info', 'price_display', 'status_display', \n        'category_display', 'views_stats', 'messages_count', 'created_display'\n    ]\n    list_filter = [\n        'status', 'category', 'created_at', 'seller__is_seller',\n        'is_approved', 'is_sold'\n    ]\n    search_fields = [",
        "detail": "products.admin",
        "documentation": {}
    },
    {
        "label": "CarAdmin",
        "kind": 6,
        "importPath": "products.admin",
        "description": "products.admin",
        "peekOfCode": "class CarAdmin(admin.ModelAdmin):\n    list_display = ['product_title', 'make_model_year', 'mileage_display', 'fuel_transmission', 'color', 'price_display']\n    list_filter = ['make', 'fuel_type', 'transmission_type', 'is_new', 'year']\n    search_fields = ['make', 'model', 'product__title']\n    list_per_page = 20\n    def product_title(self, obj):\n        return obj.product.title\n    product_title.short_description = \"عنوان المنتج\"\n    def make_model_year(self, obj):\n        return \"{} {} ({})\".format(obj.make, obj.model, obj.year)",
        "detail": "products.admin",
        "documentation": {}
    },
    {
        "label": "RealEstateAdmin",
        "kind": 6,
        "importPath": "products.admin",
        "description": "products.admin",
        "peekOfCode": "class RealEstateAdmin(admin.ModelAdmin):\n    list_display = ['product_title', 'property_type_display', 'area_display', 'rooms_display', 'rent_sale', 'price_display']\n    list_filter = ['property_type', 'for_rent', 'is_furnished', 'num_bedrooms']\n    search_fields = ['product__title', 'product__description']\n    def product_title(self, obj):\n        return obj.product.title\n    product_title.short_description = \"عنوان المنتج\"\n    def property_type_display(self, obj):\n        type_names = {'apartment': 'شقة', 'villa': 'فيلا', 'land': 'أرض', 'commercial': 'تجاري'}\n        return type_names.get(obj.property_type, obj.property_type)",
        "detail": "products.admin",
        "documentation": {}
    },
    {
        "label": "HotelBookingAdmin",
        "kind": 6,
        "importPath": "products.admin",
        "description": "products.admin",
        "peekOfCode": "class HotelBookingAdmin(admin.ModelAdmin):\n    list_display = ['hotel_name', 'product_title', 'room_type_display', 'dates_display', 'guests_display', 'price_display']\n    list_filter = ['room_type', 'num_guests', 'check_in_date']\n    search_fields = ['hotel_name', 'product__title']\n    def product_title(self, obj):\n        return obj.product.title\n    product_title.short_description = \"عنوان المنتج\"\n    def room_type_display(self, obj):\n        room_names = {'single': 'فردية', 'double': 'مزدوجة', 'suite': 'جناح', 'family': 'عائلية'}\n        return room_names.get(obj.room_type, obj.room_type)",
        "detail": "products.admin",
        "documentation": {}
    },
    {
        "label": "ProductImageAdmin",
        "kind": 6,
        "importPath": "products.admin",
        "description": "products.admin",
        "peekOfCode": "class ProductImageAdmin(admin.ModelAdmin):\n    list_display = ['image_preview', 'product_title', 'is_main', 'created_at']\n    list_filter = ['is_main', 'created_at']\n    search_fields = ['product__title']\n    def image_preview(self, obj):\n        if obj.image:\n            return format_html(\n                '<img src=\"{}\" style=\"width: 60px; height: 60px; object-fit: cover; border-radius: 8px;\" />',\n                obj.image.url\n            )",
        "detail": "products.admin",
        "documentation": {}
    },
    {
        "label": "mark_as_sold",
        "kind": 2,
        "importPath": "products.admin",
        "description": "products.admin",
        "peekOfCode": "def mark_as_sold(modeladmin, request, queryset):\n    \"\"\"تحديد المنتجات كمباعة\"\"\"\n    updated = queryset.update(status='sold')\n    messages.success(request, f'تم تحديد {updated} منتج كمباع')\nmark_as_sold.short_description = 'تحديد كمباع'\ndef mark_as_active(modeladmin, request, queryset):\n    \"\"\"تحديد المنتجات كنشطة\"\"\"\n    updated = queryset.update(status='active')\n    messages.success(request, f'تم تفعيل {updated} منتج')\nmark_as_active.short_description = 'تفعيل المنتجات'",
        "detail": "products.admin",
        "documentation": {}
    },
    {
        "label": "mark_as_active",
        "kind": 2,
        "importPath": "products.admin",
        "description": "products.admin",
        "peekOfCode": "def mark_as_active(modeladmin, request, queryset):\n    \"\"\"تحديد المنتجات كنشطة\"\"\"\n    updated = queryset.update(status='active')\n    messages.success(request, f'تم تفعيل {updated} منتج')\nmark_as_active.short_description = 'تفعيل المنتجات'\ndef mark_as_pending(modeladmin, request, queryset):\n    \"\"\"تحديد المنتجات كفي الانتظار\"\"\"\n    updated = queryset.update(status='pending_approval')\n    messages.success(request, f'تم تحديد {updated} منتج كفي الانتظار')\nmark_as_pending.short_description = 'في الانتظار'",
        "detail": "products.admin",
        "documentation": {}
    },
    {
        "label": "mark_as_pending",
        "kind": 2,
        "importPath": "products.admin",
        "description": "products.admin",
        "peekOfCode": "def mark_as_pending(modeladmin, request, queryset):\n    \"\"\"تحديد المنتجات كفي الانتظار\"\"\"\n    updated = queryset.update(status='pending_approval')\n    messages.success(request, f'تم تحديد {updated} منتج كفي الانتظار')\nmark_as_pending.short_description = 'في الانتظار'\n# Main Product Admin\n@admin.register(Product)\nclass ProductAdmin(admin.ModelAdmin):\n    list_display = [\n        'product_preview', 'seller_info', 'price_display', 'status_display', ",
        "detail": "products.admin",
        "documentation": {}
    },
    {
        "label": "mark_as_sold.short_description",
        "kind": 5,
        "importPath": "products.admin",
        "description": "products.admin",
        "peekOfCode": "mark_as_sold.short_description = 'تحديد كمباع'\ndef mark_as_active(modeladmin, request, queryset):\n    \"\"\"تحديد المنتجات كنشطة\"\"\"\n    updated = queryset.update(status='active')\n    messages.success(request, f'تم تفعيل {updated} منتج')\nmark_as_active.short_description = 'تفعيل المنتجات'\ndef mark_as_pending(modeladmin, request, queryset):\n    \"\"\"تحديد المنتجات كفي الانتظار\"\"\"\n    updated = queryset.update(status='pending_approval')\n    messages.success(request, f'تم تحديد {updated} منتج كفي الانتظار')",
        "detail": "products.admin",
        "documentation": {}
    },
    {
        "label": "mark_as_active.short_description",
        "kind": 5,
        "importPath": "products.admin",
        "description": "products.admin",
        "peekOfCode": "mark_as_active.short_description = 'تفعيل المنتجات'\ndef mark_as_pending(modeladmin, request, queryset):\n    \"\"\"تحديد المنتجات كفي الانتظار\"\"\"\n    updated = queryset.update(status='pending_approval')\n    messages.success(request, f'تم تحديد {updated} منتج كفي الانتظار')\nmark_as_pending.short_description = 'في الانتظار'\n# Main Product Admin\n@admin.register(Product)\nclass ProductAdmin(admin.ModelAdmin):\n    list_display = [",
        "detail": "products.admin",
        "documentation": {}
    },
    {
        "label": "mark_as_pending.short_description",
        "kind": 5,
        "importPath": "products.admin",
        "description": "products.admin",
        "peekOfCode": "mark_as_pending.short_description = 'في الانتظار'\n# Main Product Admin\n@admin.register(Product)\nclass ProductAdmin(admin.ModelAdmin):\n    list_display = [\n        'product_preview', 'seller_info', 'price_display', 'status_display', \n        'category_display', 'views_stats', 'messages_count', 'created_display'\n    ]\n    list_filter = [\n        'status', 'category', 'created_at', 'seller__is_seller',",
        "detail": "products.admin",
        "documentation": {}
    },
    {
        "label": "admin.site.site_header",
        "kind": 5,
        "importPath": "products.admin",
        "description": "products.admin",
        "peekOfCode": "admin.site.site_header = \"إدارة Dalal Alsaudia\"\nadmin.site.site_title = \"Dalal Alsaudia\"\nadmin.site.index_title = \"لوحة التحكم الرئيسية\"",
        "detail": "products.admin",
        "documentation": {}
    },
    {
        "label": "admin.site.site_title",
        "kind": 5,
        "importPath": "products.admin",
        "description": "products.admin",
        "peekOfCode": "admin.site.site_title = \"Dalal Alsaudia\"\nadmin.site.index_title = \"لوحة التحكم الرئيسية\"",
        "detail": "products.admin",
        "documentation": {}
    },
    {
        "label": "admin.site.index_title",
        "kind": 5,
        "importPath": "products.admin",
        "description": "products.admin",
        "peekOfCode": "admin.site.index_title = \"لوحة التحكم الرئيسية\"",
        "detail": "products.admin",
        "documentation": {}
    },
    {
        "label": "ProductsConfig",
        "kind": 6,
        "importPath": "products.apps",
        "description": "products.apps",
        "peekOfCode": "class ProductsConfig(AppConfig):\n    default_auto_field = 'django.db.models.BigAutoField'\n    name = 'products'",
        "detail": "products.apps",
        "documentation": {}
    },
    {
        "label": "ProductForm",
        "kind": 6,
        "importPath": "products.forms",
        "description": "products.forms",
        "peekOfCode": "class ProductForm(forms.ModelForm):\n    class Meta:\n        model = Product\n        fields = ['title', 'description', 'price', 'category', 'location_latitude', 'location_longitude']\n        widgets = {\n            'title': forms.TextInput(attrs={\n                'class': 'form-control',\n                'placeholder': 'عنوان المنتج'\n            }),\n            'description': forms.Textarea(attrs={",
        "detail": "products.forms",
        "documentation": {}
    },
    {
        "label": "ProductImageForm",
        "kind": 6,
        "importPath": "products.forms",
        "description": "products.forms",
        "peekOfCode": "class ProductImageForm(forms.ModelForm):\n    class Meta:\n        model = ProductImage\n        fields = ['image', 'is_main']\n        widgets = {\n            'image': forms.FileInput(attrs={\n                'class': 'form-control',\n                'accept': 'image/*'\n            }),\n            'is_main': forms.CheckboxInput(attrs={",
        "detail": "products.forms",
        "documentation": {}
    },
    {
        "label": "CarForm",
        "kind": 6,
        "importPath": "products.forms",
        "description": "products.forms",
        "peekOfCode": "class CarForm(forms.ModelForm):\n    class Meta:\n        model = Car\n        fields = ['make', 'model', 'year', 'mileage', 'transmission_type', 'fuel_type', 'color', 'is_new']\n        widgets = {\n            'make': forms.TextInput(attrs={\n                'class': 'form-control',\n                'placeholder': 'الشركة المصنعة (مثل: تويوتا، فورد)'\n            }),\n            'model': forms.TextInput(attrs={",
        "detail": "products.forms",
        "documentation": {}
    },
    {
        "label": "RealEstateForm",
        "kind": 6,
        "importPath": "products.forms",
        "description": "products.forms",
        "peekOfCode": "class RealEstateForm(forms.ModelForm):\n    class Meta:\n        model = RealEstate\n        fields = ['property_type', 'area_sqm', 'num_bedrooms', 'num_bathrooms', 'is_furnished', 'for_rent']\n        widgets = {\n            'property_type': forms.Select(attrs={\n                'class': 'form-select'\n            }),\n            'area_sqm': forms.NumberInput(attrs={\n                'class': 'form-control',",
        "detail": "products.forms",
        "documentation": {}
    },
    {
        "label": "HotelBookingForm",
        "kind": 6,
        "importPath": "products.forms",
        "description": "products.forms",
        "peekOfCode": "class HotelBookingForm(forms.ModelForm):\n    class Meta:\n        model = HotelBooking\n        fields = ['hotel_name', 'room_type', 'num_guests', 'check_in_date', 'check_out_date']\n        widgets = {\n            'hotel_name': forms.TextInput(attrs={\n                'class': 'form-control',\n                'placeholder': 'اسم الفندق'\n            }),\n            'room_type': forms.Select(attrs={",
        "detail": "products.forms",
        "documentation": {}
    },
    {
        "label": "Product",
        "kind": 6,
        "importPath": "products.models",
        "description": "products.models",
        "peekOfCode": "class Product(models.Model):\n    STATUS_CHOICES = [\n        ('pending_approval', 'Pending Approval'),\n        ('active', 'Active'),\n        ('sold', 'Sold'),\n        ('hidden', 'Hidden'),\n        ('cancelled', 'Cancelled'),\n    ]\n    title = models.CharField(max_length=200)\n    description = models.TextField()",
        "detail": "products.models",
        "documentation": {}
    },
    {
        "label": "ProductImage",
        "kind": 6,
        "importPath": "products.models",
        "description": "products.models",
        "peekOfCode": "class ProductImage(models.Model):\n    product = models.ForeignKey(Product, on_delete=models.CASCADE, related_name='images')\n    image = models.ImageField(upload_to='product_images/')\n    is_main = models.BooleanField(default=False)\n    created_at = models.DateTimeField(auto_now_add=True)\n    def __str__(self):\n        return \"Image for {}\".format(self.product.title)\nclass Car(models.Model):\n    product = models.OneToOneField(Product, on_delete=models.CASCADE, related_name='car_details')\n    make = models.CharField(max_length=50)  # Toyota, Ford, etc.",
        "detail": "products.models",
        "documentation": {}
    },
    {
        "label": "Car",
        "kind": 6,
        "importPath": "products.models",
        "description": "products.models",
        "peekOfCode": "class Car(models.Model):\n    product = models.OneToOneField(Product, on_delete=models.CASCADE, related_name='car_details')\n    make = models.CharField(max_length=50)  # Toyota, Ford, etc.\n    model = models.CharField(max_length=50)  # Camry, F-150, etc.\n    year = models.IntegerField()\n    mileage = models.IntegerField()  # in kilometers\n    transmission_type = models.CharField(max_length=20, choices=[\n        ('automatic', 'Automatic'),\n        ('manual', 'Manual'),\n    ])",
        "detail": "products.models",
        "documentation": {}
    },
    {
        "label": "RealEstate",
        "kind": 6,
        "importPath": "products.models",
        "description": "products.models",
        "peekOfCode": "class RealEstate(models.Model):\n    product = models.OneToOneField(Product, on_delete=models.CASCADE, related_name='realestate_details')\n    property_type = models.CharField(max_length=50, choices=[\n        ('apartment', 'Apartment'),\n        ('villa', 'Villa'),\n        ('land', 'Land'),\n        ('commercial', 'Commercial'),\n    ])\n    area_sqm = models.DecimalField(max_digits=8, decimal_places=2)\n    num_bedrooms = models.IntegerField(blank=True, null=True)",
        "detail": "products.models",
        "documentation": {}
    },
    {
        "label": "HotelBooking",
        "kind": 6,
        "importPath": "products.models",
        "description": "products.models",
        "peekOfCode": "class HotelBooking(models.Model):\n    product = models.OneToOneField(Product, on_delete=models.CASCADE, related_name='hotel_details')\n    hotel_name = models.CharField(max_length=100)\n    room_type = models.CharField(max_length=50, choices=[\n        ('single', 'Single Room'),\n        ('double', 'Double Room'),\n        ('suite', 'Suite'),\n        ('family', 'Family Room'),\n    ])\n    num_guests = models.IntegerField()",
        "detail": "products.models",
        "documentation": {}
    },
    {
        "label": "User",
        "kind": 5,
        "importPath": "products.models",
        "description": "products.models",
        "peekOfCode": "User = get_user_model()\nclass Product(models.Model):\n    STATUS_CHOICES = [\n        ('pending_approval', 'Pending Approval'),\n        ('active', 'Active'),\n        ('sold', 'Sold'),\n        ('hidden', 'Hidden'),\n        ('cancelled', 'Cancelled'),\n    ]\n    title = models.CharField(max_length=200)",
        "detail": "products.models",
        "documentation": {}
    },
    {
        "label": "app_name",
        "kind": 5,
        "importPath": "products.urls",
        "description": "products.urls",
        "peekOfCode": "app_name = 'products'\nurlpatterns = [\n    path('', views.ProductListView.as_view(), name='list'),\n    path('add/', views.AddProductView.as_view(), name='add'),\n    path('simple-add/', views.SimpleAddProductView.as_view(), name='simple_add'),  # للاختبار\n    path('debug/', views.debug_form_view, name='debug'),  # للتشخيص\n    path('<int:pk>/', views.ProductDetailView.as_view(), name='detail'),\n    path('<int:pk>/edit/', views.EditProductView.as_view(), name='edit'),\n    path('<int:pk>/delete/', views.DeleteProductView.as_view(), name='delete'),\n    path('image/<int:image_id>/delete/', views.delete_product_image, name='delete_image'),  # حذف الصور",
        "detail": "products.urls",
        "documentation": {}
    },
    {
        "label": "urlpatterns",
        "kind": 5,
        "importPath": "products.urls",
        "description": "products.urls",
        "peekOfCode": "urlpatterns = [\n    path('', views.ProductListView.as_view(), name='list'),\n    path('add/', views.AddProductView.as_view(), name='add'),\n    path('simple-add/', views.SimpleAddProductView.as_view(), name='simple_add'),  # للاختبار\n    path('debug/', views.debug_form_view, name='debug'),  # للتشخيص\n    path('<int:pk>/', views.ProductDetailView.as_view(), name='detail'),\n    path('<int:pk>/edit/', views.EditProductView.as_view(), name='edit'),\n    path('<int:pk>/delete/', views.DeleteProductView.as_view(), name='delete'),\n    path('image/<int:image_id>/delete/', views.delete_product_image, name='delete_image'),  # حذف الصور\n    path('my-products/', views.MyProductsView.as_view(), name='my_products'),",
        "detail": "products.urls",
        "documentation": {}
    },
    {
        "label": "ProductListView",
        "kind": 6,
        "importPath": "products.views",
        "description": "products.views",
        "peekOfCode": "class ProductListView(ListView):\n    model = Product\n    template_name = 'products/list.html'\n    context_object_name = 'products'\n    paginate_by = 12\n    def get_queryset(self):\n        return Product.objects.filter(status='active', is_approved=True).select_related('seller', 'category')\nclass ProductDetailView(DetailView):\n    model = Product\n    template_name = 'products/detail.html'",
        "detail": "products.views",
        "documentation": {}
    },
    {
        "label": "ProductDetailView",
        "kind": 6,
        "importPath": "products.views",
        "description": "products.views",
        "peekOfCode": "class ProductDetailView(DetailView):\n    model = Product\n    template_name = 'products/detail.html'\n    context_object_name = 'product'\n    def get_object(self):\n        product = get_object_or_404(Product, pk=self.kwargs['pk'])\n        # زيادة عدد المشاهدات\n        product.views_count += 1\n        product.save()\n        return product",
        "detail": "products.views",
        "documentation": {}
    },
    {
        "label": "AddProductView",
        "kind": 6,
        "importPath": "products.views",
        "description": "products.views",
        "peekOfCode": "class AddProductView(LoginRequiredMixin, CreateView):\n    model = Product\n    form_class = ProductForm\n    template_name = 'products/add.html'\n    def get_context_data(self, **kwargs):\n        context = super().get_context_data(**kwargs)\n        context['categories'] = Category.objects.all()\n        return context\n    def form_valid(self, form):\n        try:",
        "detail": "products.views",
        "documentation": {}
    },
    {
        "label": "EditProductView",
        "kind": 6,
        "importPath": "products.views",
        "description": "products.views",
        "peekOfCode": "class EditProductView(LoginRequiredMixin, UpdateView):\n    model = Product\n    form_class = ProductForm\n    template_name = 'products/edit.html'\n    def get_queryset(self):\n        return Product.objects.filter(seller=self.request.user)\n    def get_context_data(self, **kwargs):\n        context = super().get_context_data(**kwargs)\n        context['categories'] = Category.objects.all()\n        # تحديد نوع المنتج الحالي",
        "detail": "products.views",
        "documentation": {}
    },
    {
        "label": "DeleteProductView",
        "kind": 6,
        "importPath": "products.views",
        "description": "products.views",
        "peekOfCode": "class DeleteProductView(LoginRequiredMixin, DeleteView):\n    model = Product\n    template_name = 'products/delete.html'\n    success_url = reverse_lazy('products:my_products')\n    def get_queryset(self):\n        return Product.objects.filter(seller=self.request.user)\n    def delete(self, request, *args, **kwargs):\n        messages.success(self.request, 'تم حذف المنتج بنجاح!')\n        return super().delete(request, *args, **kwargs)\nclass MyProductsView(LoginRequiredMixin, ListView):",
        "detail": "products.views",
        "documentation": {}
    },
    {
        "label": "MyProductsView",
        "kind": 6,
        "importPath": "products.views",
        "description": "products.views",
        "peekOfCode": "class MyProductsView(LoginRequiredMixin, ListView):\n    model = Product\n    template_name = 'products/my_products.html'\n    context_object_name = 'products'\n    paginate_by = 12\n    def get_queryset(self):\n        return Product.objects.filter(seller=self.request.user).order_by('-created_at')\nclass ProductSearchView(ListView):\n    model = Product\n    template_name = 'products/search.html'",
        "detail": "products.views",
        "documentation": {}
    },
    {
        "label": "ProductSearchView",
        "kind": 6,
        "importPath": "products.views",
        "description": "products.views",
        "peekOfCode": "class ProductSearchView(ListView):\n    model = Product\n    template_name = 'products/search.html'\n    context_object_name = 'products'\n    paginate_by = 12\n    def get_queryset(self):\n        query = self.request.GET.get('q')\n        category = self.request.GET.get('category')\n        min_price = self.request.GET.get('min_price')\n        max_price = self.request.GET.get('max_price')",
        "detail": "products.views",
        "documentation": {}
    },
    {
        "label": "CarsListView",
        "kind": 6,
        "importPath": "products.views",
        "description": "products.views",
        "peekOfCode": "class CarsListView(ListView):\n    model = Product\n    template_name = 'products/cars.html'\n    context_object_name = 'cars'\n    paginate_by = 12\n    def get_queryset(self):\n        from .models import Car\n        # البحث عن فئة السيارات\n        cars_categories = Category.objects.filter(\n            Q(name__icontains='سيارات') | Q(name__icontains='سيارة') | Q(slug__icontains='cars')",
        "detail": "products.views",
        "documentation": {}
    },
    {
        "label": "RealEstateListView",
        "kind": 6,
        "importPath": "products.views",
        "description": "products.views",
        "peekOfCode": "class RealEstateListView(ListView):\n    model = Product\n    template_name = 'products/real_estate.html'\n    context_object_name = 'products'\n    paginate_by = 12\n    def get_queryset(self):\n        real_estate_category = Category.objects.filter(slug='real-estate').first()\n        if real_estate_category:\n            return Product.objects.filter(\n                category=real_estate_category, ",
        "detail": "products.views",
        "documentation": {}
    },
    {
        "label": "HotelsListView",
        "kind": 6,
        "importPath": "products.views",
        "description": "products.views",
        "peekOfCode": "class HotelsListView(ListView):\n    model = Product\n    template_name = 'products/hotels.html'\n    context_object_name = 'products'\n    paginate_by = 12\n    def get_queryset(self):\n        hotels_category = Category.objects.filter(slug='hotels').first()\n        if hotels_category:\n            return Product.objects.filter(\n                category=hotels_category, ",
        "detail": "products.views",
        "documentation": {}
    },
    {
        "label": "SimpleAddProductView",
        "kind": 6,
        "importPath": "products.views",
        "description": "products.views",
        "peekOfCode": "class SimpleAddProductView(LoginRequiredMixin, CreateView):\n    \"\"\"View بسيط لاختبار إضافة المنتج\"\"\"\n    model = Product\n    form_class = ProductForm\n    template_name = 'products/simple_add.html'\n    def get_context_data(self, **kwargs):\n        context = super().get_context_data(**kwargs)\n        context['categories'] = Category.objects.all()\n        return context\n    def form_valid(self, form):",
        "detail": "products.views",
        "documentation": {}
    },
    {
        "label": "ProductMapView",
        "kind": 6,
        "importPath": "products.views",
        "description": "products.views",
        "peekOfCode": "class ProductMapView(ListView):\n    \"\"\"عرض المنتجات على الخريطة\"\"\"\n    model = Product\n    template_name = 'products/map.html'\n    context_object_name = 'products'\n    def get_queryset(self):\n        # إرجاع المنتجات التي لها إحداثيات صحيحة فقط\n        return Product.objects.filter(\n            status='active',\n            is_approved=True,",
        "detail": "products.views",
        "documentation": {}
    },
    {
        "label": "debug_form_view",
        "kind": 2,
        "importPath": "products.views",
        "description": "products.views",
        "peekOfCode": "def debug_form_view(request):\n    \"\"\"View للتشخيص - يمكن حذفها لاحقاً\"\"\"\n    if request.method == 'POST':\n        print(\"=== DEBUG INFO ===\")\n        print(f\"POST data: {request.POST}\")\n        print(f\"FILES data: {request.FILES}\")\n        print(f\"Images count: {len(request.FILES.getlist('images'))}\")\n        for i, img in enumerate(request.FILES.getlist('images')):\n            print(f\"Image {i+1}: {img.name}, Size: {img.size}\")\n        print(\"==================\")",
        "detail": "products.views",
        "documentation": {}
    },
    {
        "label": "delete_product_image",
        "kind": 2,
        "importPath": "products.views",
        "description": "products.views",
        "peekOfCode": "def delete_product_image(request, image_id):\n    \"\"\"حذف صورة منتج\"\"\"\n    try:\n        image = get_object_or_404(ProductImage, id=image_id, product__seller=request.user)\n        # التأكد من عدم حذف الصورة الرئيسية إذا كانت الوحيدة\n        if image.is_main and image.product.images.count() > 1:\n            # جعل صورة أخرى رئيسية\n            next_image = image.product.images.exclude(id=image.id).first()\n            if next_image:\n                next_image.is_main = True",
        "detail": "products.views",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "reviews.migrations.0001_initial",
        "description": "reviews.migrations.0001_initial",
        "peekOfCode": "class Migration(migrations.Migration):\n    initial = True\n    dependencies = [\n        ('products', '0001_initial'),\n    ]\n    operations = [\n        migrations.CreateModel(\n            name='Review',\n            fields=[\n                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),",
        "detail": "reviews.migrations.0001_initial",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "reviews.migrations.0002_initial",
        "description": "reviews.migrations.0002_initial",
        "peekOfCode": "class Migration(migrations.Migration):\n    initial = True\n    dependencies = [\n        ('reviews', '0001_initial'),\n        migrations.swappable_dependency(settings.AUTH_USER_MODEL),\n    ]\n    operations = [\n        migrations.AddField(\n            model_name='review',\n            name='reviewer',",
        "detail": "reviews.migrations.0002_initial",
        "documentation": {}
    },
    {
        "label": "ReviewAdmin",
        "kind": 6,
        "importPath": "reviews.admin",
        "description": "reviews.admin",
        "peekOfCode": "class ReviewAdmin(admin.ModelAdmin):\n    list_display = [\n        'id', 'reviewer_info', 'target_info', 'rating_stars', \n        'comment_preview', 'timestamp'\n    ]\n    list_filter = [\n        'rating', 'timestamp', 'product__category',\n        'reviewer__is_seller', 'seller__is_seller'\n    ]\n    search_fields = [",
        "detail": "reviews.admin",
        "documentation": {}
    },
    {
        "label": "ReviewsConfig",
        "kind": 6,
        "importPath": "reviews.apps",
        "description": "reviews.apps",
        "peekOfCode": "class ReviewsConfig(AppConfig):\n    default_auto_field = 'django.db.models.BigAutoField'\n    name = 'reviews'",
        "detail": "reviews.apps",
        "documentation": {}
    },
    {
        "label": "Review",
        "kind": 6,
        "importPath": "reviews.models",
        "description": "reviews.models",
        "peekOfCode": "class Review(models.Model):\n    reviewer = models.ForeignKey(User, on_delete=models.CASCADE, related_name='reviews_given')\n    product = models.ForeignKey(Product, on_delete=models.CASCADE, blank=True, null=True, related_name='reviews')\n    seller = models.ForeignKey(User, on_delete=models.CASCADE, blank=True, null=True, related_name='reviews_received')\n    rating = models.IntegerField(choices=[(i, i) for i in range(1, 6)])  # 1-5 stars\n    comment = models.TextField()\n    timestamp = models.DateTimeField(auto_now_add=True)\n    class Meta:\n        ordering = ['-timestamp']\n    def __str__(self):",
        "detail": "reviews.models",
        "documentation": {}
    },
    {
        "label": "User",
        "kind": 5,
        "importPath": "reviews.models",
        "description": "reviews.models",
        "peekOfCode": "User = get_user_model()\nclass Review(models.Model):\n    reviewer = models.ForeignKey(User, on_delete=models.CASCADE, related_name='reviews_given')\n    product = models.ForeignKey(Product, on_delete=models.CASCADE, blank=True, null=True, related_name='reviews')\n    seller = models.ForeignKey(User, on_delete=models.CASCADE, blank=True, null=True, related_name='reviews_received')\n    rating = models.IntegerField(choices=[(i, i) for i in range(1, 6)])  # 1-5 stars\n    comment = models.TextField()\n    timestamp = models.DateTimeField(auto_now_add=True)\n    class Meta:\n        ordering = ['-timestamp']",
        "detail": "reviews.models",
        "documentation": {}
    },
    {
        "label": "app_name",
        "kind": 5,
        "importPath": "reviews.urls",
        "description": "reviews.urls",
        "peekOfCode": "app_name = 'reviews'\nurlpatterns = [\n    path('add/<int:product_id>/', views.add_review, name='add_review'),\n    path('product/<int:product_id>/', views.product_reviews, name='product_reviews'),\n    path('my-reviews/', views.my_reviews, name='my_reviews'),\n    path('edit/<int:review_id>/', views.edit_review, name='edit_review'),\n    path('delete/<int:review_id>/', views.delete_review, name='delete_review'),\n]",
        "detail": "reviews.urls",
        "documentation": {}
    },
    {
        "label": "urlpatterns",
        "kind": 5,
        "importPath": "reviews.urls",
        "description": "reviews.urls",
        "peekOfCode": "urlpatterns = [\n    path('add/<int:product_id>/', views.add_review, name='add_review'),\n    path('product/<int:product_id>/', views.product_reviews, name='product_reviews'),\n    path('my-reviews/', views.my_reviews, name='my_reviews'),\n    path('edit/<int:review_id>/', views.edit_review, name='edit_review'),\n    path('delete/<int:review_id>/', views.delete_review, name='delete_review'),\n]",
        "detail": "reviews.urls",
        "documentation": {}
    },
    {
        "label": "add_review",
        "kind": 2,
        "importPath": "reviews.views",
        "description": "reviews.views",
        "peekOfCode": "def add_review(request, product_id):\n    \"\"\"إضافة تقييم لمنتج\"\"\"\n    product = get_object_or_404(Product, id=product_id)\n    # التحقق من عدم تقييم المستخدم للمنتج مسبقاً\n    existing_review = Review.objects.filter(user=request.user, product=product).first()\n    if existing_review:\n        messages.error(request, 'لقد قمت بتقييم هذا المنتج مسبقاً')\n        return redirect('products:detail', pk=product.id)\n    # التحقق من أن المستخدم ليس صاحب المنتج\n    if product.seller == request.user:",
        "detail": "reviews.views",
        "documentation": {}
    },
    {
        "label": "product_reviews",
        "kind": 2,
        "importPath": "reviews.views",
        "description": "reviews.views",
        "peekOfCode": "def product_reviews(request, product_id):\n    \"\"\"عرض تقييمات المنتج\"\"\"\n    product = get_object_or_404(Product, id=product_id)\n    reviews = Review.objects.filter(product=product).order_by('-created_at')\n    # حساب متوسط التقييم\n    avg_rating = reviews.aggregate(Avg('rating'))['rating__avg']\n    context = {\n        'product': product,\n        'reviews': reviews,\n        'avg_rating': round(avg_rating, 1) if avg_rating else 0,",
        "detail": "reviews.views",
        "documentation": {}
    },
    {
        "label": "my_reviews",
        "kind": 2,
        "importPath": "reviews.views",
        "description": "reviews.views",
        "peekOfCode": "def my_reviews(request):\n    \"\"\"عرض تقييمات المستخدم\"\"\"\n    reviews = Review.objects.filter(user=request.user).order_by('-created_at')\n    return render(request, 'reviews/my_reviews.html', {'reviews': reviews})\n@login_required\ndef edit_review(request, review_id):\n    \"\"\"تعديل تقييم\"\"\"\n    review = get_object_or_404(Review, id=review_id, user=request.user)\n    if request.method == 'POST':\n        rating = request.POST.get('rating')",
        "detail": "reviews.views",
        "documentation": {}
    },
    {
        "label": "edit_review",
        "kind": 2,
        "importPath": "reviews.views",
        "description": "reviews.views",
        "peekOfCode": "def edit_review(request, review_id):\n    \"\"\"تعديل تقييم\"\"\"\n    review = get_object_or_404(Review, id=review_id, user=request.user)\n    if request.method == 'POST':\n        rating = request.POST.get('rating')\n        comment = request.POST.get('comment', '')\n        try:\n            rating = int(rating)\n            if 1 <= rating <= 5:\n                review.rating = rating",
        "detail": "reviews.views",
        "documentation": {}
    },
    {
        "label": "delete_review",
        "kind": 2,
        "importPath": "reviews.views",
        "description": "reviews.views",
        "peekOfCode": "def delete_review(request, review_id):\n    \"\"\"حذف تقييم\"\"\"\n    review = get_object_or_404(Review, id=review_id, user=request.user)\n    if request.method == 'POST':\n        product_id = review.product.id\n        review.delete()\n        messages.success(request, 'تم حذف تقييمك بنجاح')\n        return redirect('products:detail', pk=product_id)\n    return render(request, 'reviews/delete_review.html', {'review': review})",
        "detail": "reviews.views",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "users.migrations.0001_initial",
        "description": "users.migrations.0001_initial",
        "peekOfCode": "class Migration(migrations.Migration):\n    initial = True\n    dependencies = [\n        ('auth', '0012_alter_user_first_name_max_length'),\n    ]\n    operations = [\n        migrations.CreateModel(\n            name='User',\n            fields=[\n                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),",
        "detail": "users.migrations.0001_initial",
        "documentation": {}
    },
    {
        "label": "CustomUserAdmin",
        "kind": 6,
        "importPath": "users.admin",
        "description": "users.admin",
        "peekOfCode": "class CustomUserAdmin(BaseUserAdmin):\n    list_display = [\n        'username_with_status', 'user_info', 'activity_stats', \n        'registration_info', 'last_login_display', 'actions_display'\n    ]\n    list_filter = [\n        'is_active', 'is_staff', 'is_superuser', 'date_joined', 'last_login'\n    ]\n    search_fields = ['username', 'email', 'first_name', 'last_name']\n    list_per_page = 25",
        "detail": "users.admin",
        "documentation": {}
    },
    {
        "label": "User",
        "kind": 5,
        "importPath": "users.admin",
        "description": "users.admin",
        "peekOfCode": "User = get_user_model()\n@admin.register(User)\nclass CustomUserAdmin(BaseUserAdmin):\n    list_display = [\n        'username_with_status', 'user_info', 'activity_stats', \n        'registration_info', 'last_login_display', 'actions_display'\n    ]\n    list_filter = [\n        'is_active', 'is_staff', 'is_superuser', 'date_joined', 'last_login'\n    ]",
        "detail": "users.admin",
        "documentation": {}
    },
    {
        "label": "UsersConfig",
        "kind": 6,
        "importPath": "users.apps",
        "description": "users.apps",
        "peekOfCode": "class UsersConfig(AppConfig):\n    default_auto_field = 'django.db.models.BigAutoField'\n    name = 'users'",
        "detail": "users.apps",
        "documentation": {}
    },
    {
        "label": "UserRegistrationForm",
        "kind": 6,
        "importPath": "users.forms",
        "description": "users.forms",
        "peekOfCode": "class UserRegistrationForm(UserCreationForm):\n    email = forms.EmailField(required=True, widget=forms.EmailInput(attrs={\n        'class': 'form-control',\n        'placeholder': 'البريد الإلكتروني'\n    }))\n    first_name = forms.CharField(max_length=30, required=True, widget=forms.TextInput(attrs={\n        'class': 'form-control',\n        'placeholder': 'الاسم الأول'\n    }))\n    last_name = forms.CharField(max_length=30, required=True, widget=forms.TextInput(attrs={",
        "detail": "users.forms",
        "documentation": {}
    },
    {
        "label": "UserProfileForm",
        "kind": 6,
        "importPath": "users.forms",
        "description": "users.forms",
        "peekOfCode": "class UserProfileForm(forms.ModelForm):\n    first_name = forms.CharField(max_length=30, required=True, widget=forms.TextInput(attrs={\n        'class': 'form-control',\n        'placeholder': 'الاسم الأول'\n    }))\n    last_name = forms.CharField(max_length=30, required=True, widget=forms.TextInput(attrs={\n        'class': 'form-control',\n        'placeholder': 'اسم العائلة'\n    }))\n    email = forms.EmailField(required=True, widget=forms.EmailInput(attrs={",
        "detail": "users.forms",
        "documentation": {}
    },
    {
        "label": "User",
        "kind": 6,
        "importPath": "users.models",
        "description": "users.models",
        "peekOfCode": "class User(AbstractUser):\n    phone_number = models.CharField(max_length=20, blank=True, null=True)\n    address = models.CharField(max_length=255, blank=True, null=True)\n    is_seller = models.BooleanField(default=False)\n    is_admin_verified = models.BooleanField(default=False)\n    profile_picture = models.ImageField(upload_to='profile_pics/', blank=True, null=True)\n    def __str__(self):\n        return self.username",
        "detail": "users.models",
        "documentation": {}
    },
    {
        "label": "app_name",
        "kind": 5,
        "importPath": "users.urls",
        "description": "users.urls",
        "peekOfCode": "app_name = 'users'\nurlpatterns = [\n    path('login/', auth_views.LoginView.as_view(template_name='users/login.html'), name='login'),\n    path('logout/', auth_views.LogoutView.as_view(), name='logout'),\n    path('register/', views.RegisterView.as_view(), name='register'),\n    path('profile/', views.ProfileView.as_view(), name='profile'),\n    path('profile/edit/', views.EditProfileView.as_view(), name='edit_profile'),\n    path('password-reset/', \n         auth_views.PasswordResetView.as_view(template_name='users/password_reset.html'), \n         name='password_reset'),",
        "detail": "users.urls",
        "documentation": {}
    },
    {
        "label": "urlpatterns",
        "kind": 5,
        "importPath": "users.urls",
        "description": "users.urls",
        "peekOfCode": "urlpatterns = [\n    path('login/', auth_views.LoginView.as_view(template_name='users/login.html'), name='login'),\n    path('logout/', auth_views.LogoutView.as_view(), name='logout'),\n    path('register/', views.RegisterView.as_view(), name='register'),\n    path('profile/', views.ProfileView.as_view(), name='profile'),\n    path('profile/edit/', views.EditProfileView.as_view(), name='edit_profile'),\n    path('password-reset/', \n         auth_views.PasswordResetView.as_view(template_name='users/password_reset.html'), \n         name='password_reset'),\n    path('password-reset/done/', ",
        "detail": "users.urls",
        "documentation": {}
    },
    {
        "label": "RegisterView",
        "kind": 6,
        "importPath": "users.views",
        "description": "users.views",
        "peekOfCode": "class RegisterView(CreateView):\n    model = User\n    form_class = UserRegistrationForm\n    template_name = 'users/register.html'\n    success_url = reverse_lazy('home')\n    def form_valid(self, form):\n        user = form.save()\n        login(self.request, user)\n        messages.success(self.request, 'تم إنشاء حسابك بنجاح!')\n        return redirect('home')",
        "detail": "users.views",
        "documentation": {}
    },
    {
        "label": "ProfileView",
        "kind": 6,
        "importPath": "users.views",
        "description": "users.views",
        "peekOfCode": "class ProfileView(LoginRequiredMixin, DetailView):\n    model = User\n    template_name = 'users/profile.html'\n    context_object_name = 'profile_user'\n    def get_object(self):\n        return self.request.user\n    def get_context_data(self, **kwargs):\n        context = super().get_context_data(**kwargs)\n        user = self.get_object()\n        # إحصائيات المنتجات",
        "detail": "users.views",
        "documentation": {}
    },
    {
        "label": "EditProfileView",
        "kind": 6,
        "importPath": "users.views",
        "description": "users.views",
        "peekOfCode": "class EditProfileView(LoginRequiredMixin, UpdateView):\n    model = User\n    form_class = UserProfileForm\n    template_name = 'users/edit_profile.html'\n    success_url = reverse_lazy('users:profile')\n    def get_object(self):\n        return self.request.user\n    def form_valid(self, form):\n        messages.success(self.request, 'تم تحديث ملفك الشخصي بنجاح!')\n        return super().form_valid(form)",
        "detail": "users.views",
        "documentation": {}
    },
    {
        "label": "User",
        "kind": 5,
        "importPath": "create_admin",
        "description": "create_admin",
        "peekOfCode": "User = get_user_model()\n# إنشاء مستخدم إداري\nadmin_user, created = User.objects.get_or_create(\n    username='admin',\n    defaults={\n        'email': 'admin@dalalsaudi.com',\n        'first_name': 'مدير',\n        'last_name': 'النظام',\n        'is_staff': True,\n        'is_superuser': True,",
        "detail": "create_admin",
        "documentation": {}
    },
    {
        "label": "main",
        "kind": 2,
        "importPath": "manage",
        "description": "manage",
        "peekOfCode": "def main():\n    \"\"\"Run administrative tasks.\"\"\"\n    os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'dalal_saudi.settings')\n    try:\n        from django.core.management import execute_from_command_line\n    except ImportError as exc:\n        raise ImportError(\n            \"Couldn't import Django. Are you sure it's installed and \"\n            \"available on your PYTHONPATH environment variable? Did you \"\n            \"forget to activate a virtual environment?\"",
        "detail": "manage",
        "documentation": {}
    }
]